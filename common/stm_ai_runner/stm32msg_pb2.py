# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stm32msg.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='stm32msg.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x0estm32msg.proto\"f\n\x06reqMsg\x12\r\n\x05reqid\x18\x01 \x02(\r\x12#\n\x03\x63md\x18\x02 \x02(\x0e\x32\x08.EnumCmd:\x0c\x43MD_SYS_INFO\x12\r\n\x05param\x18\x03 \x02(\r\x12\x0c\n\x04name\x18\x04 \x02(\t\x12\x0b\n\x03opt\x18\x05 \x02(\r\"\xaf\x01\n\x0f\x61iTensorDescMsg\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x11\n\x06\x66ormat\x18\x02 \x02(\r:\x01\x30\x12\x0f\n\x04size\x18\x03 \x02(\r:\x01\x30\x12\x11\n\x06n_dims\x18\x04 \x02(\r:\x01\x31\x12\x0c\n\x04\x64ims\x18\x05 \x03(\r\x12\x10\n\x05scale\x18\x06 \x02(\x02:\x01\x30\x12\x14\n\tzeropoint\x18\x07 \x02(\x05:\x01\x30\x12\x0f\n\x04\x61\x64\x64r\x18\x08 \x02(\r:\x01\x30\x12\x10\n\x05\x66lags\x18\t \x02(\r:\x01\x30\"J\n\taiDataMsg\x12\x0f\n\x04type\x18\x01 \x02(\r:\x01\x30\x12\x0c\n\x04size\x18\x02 \x02(\r\x12\x0f\n\x04\x61\x64\x64r\x18\x03 \x02(\r:\x01\x30\x12\r\n\x05\x64\x61tas\x18\x04 \x02(\x0c\"\x98\x01\n\raiOperatorMsg\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04type\x18\x02 \x02(\r\x12\n\n\x02id\x18\x03 \x02(\r\x12\x10\n\x08\x64uration\x18\x04 \x02(\x02\x12\x14\n\x0c\x63ounter_type\x18\x05 \x02(\r\x12\x10\n\x08\x63ounters\x18\x06 \x03(\r\x12\x12\n\nstack_used\x18\x07 \x02(\x05\x12\x11\n\theap_used\x18\x08 \x02(\x05\"G\n\x0b\x61iTensorMsg\x12\x1e\n\x04\x64\x65sc\x18\x01 \x02(\x0b\x32\x10.aiTensorDescMsg\x12\x18\n\x04\x64\x61ta\x18\x02 \x02(\x0b\x32\n.aiDataMsg\"\x9b\x03\n\x0e\x61iModelInfoMsg\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04rtid\x18\x02 \x02(\r\x12\x11\n\tsignature\x18\x03 \x02(\t\x12\x18\n\x10\x63ompile_datetime\x18\x04 \x02(\t\x12\x17\n\x0fruntime_version\x18\x05 \x02(\r\x12\x14\n\x0ctool_version\x18\x06 \x02(\r\x12\x0e\n\x06n_macc\x18\x07 \x02(\x04\x12\x0f\n\x07n_nodes\x18\x08 \x02(\r\x12\x10\n\x08n_inputs\x18\n \x02(\r\x12 \n\x06inputs\x18\x0b \x03(\x0b\x32\x10.aiTensorDescMsg\x12\x11\n\tn_outputs\x18\x0c \x02(\r\x12!\n\x07outputs\x18\r \x03(\x0b\x32\x10.aiTensorDescMsg\x12\x15\n\rn_activations\x18\x0e \x02(\r\x12%\n\x0b\x61\x63tivations\x18\x0f \x03(\x0b\x32\x10.aiTensorDescMsg\x12\x10\n\x08n_params\x18\x10 \x02(\r\x12 \n\x06params\x18\x11 \x03(\x0b\x32\x10.aiTensorDescMsg\x12\x14\n\x0cruntime_desc\x18\x14 \x02(\t\"<\n\x07syncMsg\x12\x0f\n\x07version\x18\x01 \x02(\r\x12\x12\n\ncapability\x18\x04 \x02(\r\x12\x0c\n\x04rtid\x18\x05 \x02(\r\"Y\n\nsysinfoMsg\x12\r\n\x05\x64\x65vid\x18\x01 \x02(\r\x12\x0e\n\x06sclock\x18\x02 \x02(\r\x12\x0e\n\x06hclock\x18\x03 \x02(\r\x12\r\n\x05\x63\x61\x63he\x18\x04 \x02(\r\x12\r\n\x05\x65xtra\x18\x05 \x03(\r\"2\n\x06\x61\x63kMsg\x12\r\n\x05param\x18\x01 \x02(\r\x12\x19\n\x05\x65rror\x18\x02 \x02(\x0e\x32\n.EnumError\"$\n\x06logMsg\x12\r\n\x05level\x18\x01 \x02(\r\x12\x0b\n\x03str\x18\x02 \x02(\t\"\xa2\x02\n\x07respMsg\x12\r\n\x05reqid\x18\x01 \x02(\r\x12\x19\n\x05state\x18\x02 \x02(\x0e\x32\n.EnumState\x12\x18\n\x04sync\x18\n \x01(\x0b\x32\x08.syncMsgH\x00\x12\x1c\n\x05sinfo\x18\x0b \x01(\x0b\x32\x0b.sysinfoMsgH\x00\x12\x16\n\x03\x61\x63k\x18\x0c \x01(\x0b\x32\x07.ackMsgH\x00\x12\x16\n\x03log\x18\r \x01(\x0b\x32\x07.logMsgH\x00\x12\x1a\n\x04\x64\x61ta\x18\x0f \x01(\x0b\x32\n.aiDataMsgH\x00\x12\x1c\n\x02op\x18\x10 \x01(\x0b\x32\x0e.aiOperatorMsgH\x00\x12\x1e\n\x06tensor\x18\x11 \x01(\x0b\x32\x0c.aiTensorMsgH\x00\x12 \n\x05minfo\x18\x16 \x01(\x0b\x32\x0f.aiModelInfoMsgH\x00\x42\t\n\x07payload*7\n\x0b\x45numVersion\x12\x13\n\x0fP_VERSION_MAJOR\x10\x03\x12\x13\n\x0fP_VERSION_MINOR\x10\x01*\x86\x01\n\x0e\x45numLowLevelIO\x12\x17\n\x12IO_HEADER_EOM_FLAG\x10\x80\x01\x12\x16\n\x12IO_HEADER_SIZE_MSK\x10\x7f\x12\x15\n\x11IO_IN_PACKET_SIZE\x10 \x12\x16\n\x12IO_OUT_PACKET_SIZE\x10 \x12\x10\n\x0bIO_OUT_SYNC\x10\xaa\x01\x1a\x02\x10\x01*y\n\rEnumAiRuntime\x12\x10\n\x0c\x41I_RT_STM_AI\x10\x01\x12\x0e\n\nAI_RT_TFLM\x10\x02\x12\r\n\tAI_RT_TVM\x10\x03\x12\x0f\n\x0b\x41I_RT_ATONN\x10\x04\x12\x0e\n\nAI_RT_GLOW\x10\x05\x12\x16\n\x12\x41I_RT_STM_AI_RELOC\x10\x06*w\n\x10\x45numAiApiRuntime\x12\x12\n\x0e\x41I_RT_API_NONE\x10\x00\x12\x13\n\x0f\x41I_RT_API_ST_AI\x10\x01\x12\x12\n\x0e\x41I_RT_API_LITE\x10\x02\x12\x13\n\x0f\x41I_RT_API_RELOC\x10\x04\x12\x11\n\rAI_RT_API_POS\x10\x08*i\n\tEnumTools\x12\n\n\x06\x41I_GCC\x10\x01\x12\n\n\x06\x41I_IAR\x10\x02\x12\x0c\n\x08\x41I_MDK_5\x10\x03\x12\x0c\n\x08\x41I_MDK_6\x10\x04\x12\n\n\x06\x41I_HTC\x10\x05\x12\n\n\x06\x41I_GHS\x10\x06\x12\x10\n\x0c\x41I_TOOLS_POS\x10\x10*|\n\x0e\x45numCapability\x12\x10\n\x0c\x43\x41P_OBSERVER\x10\x01\x12\r\n\tCAP_RELOC\x10\x02\x12\x12\n\x0e\x43\x41P_READ_WRITE\x10\x08\x12\x0e\n\nCAP_RANDOM\x10\x10\x12\x11\n\rCAP_FILTERING\x10 \x12\x12\n\rCAP_SELF_TEST\x10\x80\x01*\xed\x01\n\x07\x45numCmd\x12\x0c\n\x08\x43MD_SYNC\x10\x00\x12\x10\n\x0c\x43MD_SYS_INFO\x10\x01\x12\x14\n\x10\x43MD_NETWORK_INFO\x10\n\x12\x13\n\x0f\x43MD_NETWORK_RUN\x10\x0b\x12\x16\n\x12\x43MD_NETWORK_REPORT\x10\x0c\x12\x13\n\x0f\x43MD_MEMORY_READ\x10\x14\x12\x14\n\x10\x43MD_MEMORY_WRITE\x10\x15\x12\x17\n\x13\x43MD_MEMORY_CHECKSUM\x10\x16\x12\x12\n\x0e\x43MD_SET_FILTER\x10\x1e\x12\x0c\n\x08\x43MD_TEST\x10\x64\x12\x19\n\x14\x43MD_TEST_UNSUPPORTED\x10\xc8\x01*Q\n\tEnumState\x12\n\n\x06S_IDLE\x10\x00\x12\r\n\tS_WAITING\x10\x01\x12\x10\n\x0cS_PROCESSING\x10\x02\x12\n\n\x06S_DONE\x10\x03\x12\x0b\n\x07S_ERROR\x10\x04*\xd3\x01\n\tEnumError\x12\n\n\x06\x45_NONE\x10\x00\x12\x12\n\x0e\x45_INVALID_SIZE\x10\x01\x12\x14\n\x10\x45_INVALID_FORMAT\x10\x02\x12\x13\n\x0f\x45_INVALID_STATE\x10\x03\x12\x13\n\x0f\x45_INVALID_PARAM\x10\x04\x12\x13\n\x0f\x45_INVALID_SHAPE\x10\x05\x12\x11\n\rE_INVALID_CMD\x10\x06\x12\x1b\n\x17\x45_INVALID_UNINITIALIZED\x10\x07\x12\x12\n\x0e\x45_MEM_OVERFLOW\x10\x08\x12\r\n\tE_GENERIC\x10\n*j\n\x11\x45numCounterFormat\x12\x13\n\x0f\x43OUNTER_FMT_64B\x10\x00\x12\x13\n\x0f\x43OUNTER_FMT_32B\x10\x01\x12\x16\n\x10\x43OUNTER_FMT_MASK\x10\xff\xff\x03\x12\x13\n\x0f\x43OUNTER_FMT_POS\x10\x10*@\n\x0f\x45numCounterType\x12\x14\n\x10\x43OUNTER_TYPE_CPU\x10\x00\x12\x17\n\x11\x43OUNTER_TYPE_MASK\x10\xff\xff\x03*\xfd\x01\n\x0c\x45numRunParam\x12\x16\n\x12P_RUN_MODE_IO_ONLY\x10\x01\x12\x18\n\x14P_RUN_MODE_PER_LAYER\x10\x02\x12\"\n\x1eP_RUN_MODE_PER_LAYER_WITH_DATA\x10\x04\x12\x13\n\x0fP_RUN_MODE_PERF\x10\x08\x12\x13\n\x0fP_RUN_MODE_MASK\x10\x0f\x12\x15\n\x10P_RUN_CONF_DEBUG\x10\x80\x02\x12\x1b\n\x16P_RUN_CONF_CONST_VALUE\x10\x80\x04\x12\x1c\n\x17P_RUN_CONF_DIRECT_WRITE\x10\x80\x08\x12\x1b\n\x16P_RUN_CONF_DIRECT_READ\x10\x80\x10*\xfe\x01\n\x0c\x45numShapeFmt\x12\x13\n\x0f\x46_SHAPE_FMT_UND\x10\x00\x12\x14\n\x10\x46_SHAPE_FMT_BCWH\x10\x01\x12\x14\n\x10\x46_SHAPE_FMT_BHWC\x10\x02\x12\x14\n\x10\x46_SHAPE_FMT_BCHW\x10\x03\x12\x15\n\x11\x46_SHAPE_FMT_ST_AI\x10\x04\x12\x13\n\x0f\x46_SHAPE_FMT_RAW\x10\x05\x12\x1d\n\x19\x46_SHAPE_FMT_CHANNEL_FIRST\x10\x10\x12\x1c\n\x18\x46_SHAPE_FMT_CHANNEL_LAST\x10 \x12\x19\n\x15\x46_SHAPE_FMT_HAS_BATCH\x10@\x12\x13\n\x0f\x46_SHAPE_FMT_POS\x10\x18*\x8c\x01\n\x0f\x45numDataFmtType\x12\x16\n\x12\x44\x41TA_FMT_TYPE_NONE\x10\x00\x12\x17\n\x13\x44\x41TA_FMT_TYPE_FLOAT\x10\x01\x12\x19\n\x15\x44\x41TA_FMT_TYPE_INTEGER\x10\x02\x12\x16\n\x12\x44\x41TA_FMT_TYPE_BOOL\x10\x03\x12\x15\n\x11\x44\x41TA_FMT_TYPE_FXP\x10\x0f*\xd6\x01\n\x0e\x45numTensorFlag\x12\x14\n\x10TENSOR_FLAG_NONE\x10\x00\x12\x15\n\x11TENSOR_FLAG_INPUT\x10\x01\x12\x16\n\x12TENSOR_FLAG_OUTPUT\x10\x02\x12\x18\n\x14TENSOR_FLAG_INTERNAL\x10\x04\x12\x17\n\x13TENSOR_FLAG_MEMPOOL\x10\x08\x12\x15\n\x10TENSOR_FLAG_LAST\x10\x80\x02\x12\x18\n\x13TENSOR_FLAG_NO_DATA\x10\x80\x04\x12\x1b\n\x16TENSOR_FLAG_IN_MEMPOOL\x10\x80\x08*^\n\x0c\x45numDataType\x12\x12\n\x0e\x44\x41TA_TYPE_NONE\x10\x00\x12\x14\n\x10\x44\x41TA_TYPE_FILTER\x10\x01\x12\x11\n\rDATA_TYPE_MD5\x10\x02\x12\x11\n\rDATA_TYPE_POS\x10\x18*\x97\x01\n\x10\x45numOperatorFlag\x12\x16\n\x12OPERATOR_FLAG_NONE\x10\x00\x12\x1a\n\x16OPERATOR_FLAG_INTERNAL\x10\x01\x12\x16\n\x12OPERATOR_FLAG_LAST\x10\x02\x12 \n\x1cOPERATOR_FLAG_WITHOUT_TENSOR\x10\x04\x12\x15\n\x11OPERATOR_FLAG_POS\x10\x18')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ENUMVERSION = _descriptor.EnumDescriptor(
  name='EnumVersion',
  full_name='EnumVersion',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='P_VERSION_MAJOR', index=0, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_VERSION_MINOR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1554,
  serialized_end=1609,
)
_sym_db.RegisterEnumDescriptor(_ENUMVERSION)

EnumVersion = enum_type_wrapper.EnumTypeWrapper(_ENUMVERSION)
_ENUMLOWLEVELIO = _descriptor.EnumDescriptor(
  name='EnumLowLevelIO',
  full_name='EnumLowLevelIO',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IO_HEADER_EOM_FLAG', index=0, number=128,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_HEADER_SIZE_MSK', index=1, number=127,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_IN_PACKET_SIZE', index=2, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_OUT_PACKET_SIZE', index=3, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_OUT_SYNC', index=4, number=170,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001')),
  serialized_start=1612,
  serialized_end=1746,
)
_sym_db.RegisterEnumDescriptor(_ENUMLOWLEVELIO)

EnumLowLevelIO = enum_type_wrapper.EnumTypeWrapper(_ENUMLOWLEVELIO)
_ENUMAIRUNTIME = _descriptor.EnumDescriptor(
  name='EnumAiRuntime',
  full_name='EnumAiRuntime',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AI_RT_STM_AI', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_TFLM', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_TVM', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_ATONN', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_GLOW', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_STM_AI_RELOC', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1748,
  serialized_end=1869,
)
_sym_db.RegisterEnumDescriptor(_ENUMAIRUNTIME)

EnumAiRuntime = enum_type_wrapper.EnumTypeWrapper(_ENUMAIRUNTIME)
_ENUMAIAPIRUNTIME = _descriptor.EnumDescriptor(
  name='EnumAiApiRuntime',
  full_name='EnumAiApiRuntime',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AI_RT_API_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_API_ST_AI', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_API_LITE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_API_RELOC', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_RT_API_POS', index=4, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1871,
  serialized_end=1990,
)
_sym_db.RegisterEnumDescriptor(_ENUMAIAPIRUNTIME)

EnumAiApiRuntime = enum_type_wrapper.EnumTypeWrapper(_ENUMAIAPIRUNTIME)
_ENUMTOOLS = _descriptor.EnumDescriptor(
  name='EnumTools',
  full_name='EnumTools',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AI_GCC', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_IAR', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_MDK_5', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_MDK_6', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_HTC', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_GHS', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI_TOOLS_POS', index=6, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1992,
  serialized_end=2097,
)
_sym_db.RegisterEnumDescriptor(_ENUMTOOLS)

EnumTools = enum_type_wrapper.EnumTypeWrapper(_ENUMTOOLS)
_ENUMCAPABILITY = _descriptor.EnumDescriptor(
  name='EnumCapability',
  full_name='EnumCapability',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CAP_OBSERVER', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAP_RELOC', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAP_READ_WRITE', index=2, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAP_RANDOM', index=3, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAP_FILTERING', index=4, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAP_SELF_TEST', index=5, number=128,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2099,
  serialized_end=2223,
)
_sym_db.RegisterEnumDescriptor(_ENUMCAPABILITY)

EnumCapability = enum_type_wrapper.EnumTypeWrapper(_ENUMCAPABILITY)
_ENUMCMD = _descriptor.EnumDescriptor(
  name='EnumCmd',
  full_name='EnumCmd',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CMD_SYNC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_SYS_INFO', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_NETWORK_INFO', index=2, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_NETWORK_RUN', index=3, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_NETWORK_REPORT', index=4, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_MEMORY_READ', index=5, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_MEMORY_WRITE', index=6, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_MEMORY_CHECKSUM', index=7, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_SET_FILTER', index=8, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_TEST', index=9, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD_TEST_UNSUPPORTED', index=10, number=200,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2226,
  serialized_end=2463,
)
_sym_db.RegisterEnumDescriptor(_ENUMCMD)

EnumCmd = enum_type_wrapper.EnumTypeWrapper(_ENUMCMD)
_ENUMSTATE = _descriptor.EnumDescriptor(
  name='EnumState',
  full_name='EnumState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='S_IDLE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='S_WAITING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='S_PROCESSING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='S_DONE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='S_ERROR', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2465,
  serialized_end=2546,
)
_sym_db.RegisterEnumDescriptor(_ENUMSTATE)

EnumState = enum_type_wrapper.EnumTypeWrapper(_ENUMSTATE)
_ENUMERROR = _descriptor.EnumDescriptor(
  name='EnumError',
  full_name='EnumError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='E_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_SIZE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_FORMAT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_STATE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_PARAM', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_SHAPE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_CMD', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_UNINITIALIZED', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_MEM_OVERFLOW', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_GENERIC', index=9, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2549,
  serialized_end=2760,
)
_sym_db.RegisterEnumDescriptor(_ENUMERROR)

EnumError = enum_type_wrapper.EnumTypeWrapper(_ENUMERROR)
_ENUMCOUNTERFORMAT = _descriptor.EnumDescriptor(
  name='EnumCounterFormat',
  full_name='EnumCounterFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COUNTER_FMT_64B', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER_FMT_32B', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER_FMT_MASK', index=2, number=65535,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER_FMT_POS', index=3, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2762,
  serialized_end=2868,
)
_sym_db.RegisterEnumDescriptor(_ENUMCOUNTERFORMAT)

EnumCounterFormat = enum_type_wrapper.EnumTypeWrapper(_ENUMCOUNTERFORMAT)
_ENUMCOUNTERTYPE = _descriptor.EnumDescriptor(
  name='EnumCounterType',
  full_name='EnumCounterType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COUNTER_TYPE_CPU', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER_TYPE_MASK', index=1, number=65535,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2870,
  serialized_end=2934,
)
_sym_db.RegisterEnumDescriptor(_ENUMCOUNTERTYPE)

EnumCounterType = enum_type_wrapper.EnumTypeWrapper(_ENUMCOUNTERTYPE)
_ENUMRUNPARAM = _descriptor.EnumDescriptor(
  name='EnumRunParam',
  full_name='EnumRunParam',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='P_RUN_MODE_IO_ONLY', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_MODE_PER_LAYER', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_MODE_PER_LAYER_WITH_DATA', index=2, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_MODE_PERF', index=3, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_MODE_MASK', index=4, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_CONF_DEBUG', index=5, number=256,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_CONF_CONST_VALUE', index=6, number=512,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_CONF_DIRECT_WRITE', index=7, number=1024,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_RUN_CONF_DIRECT_READ', index=8, number=2048,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2937,
  serialized_end=3190,
)
_sym_db.RegisterEnumDescriptor(_ENUMRUNPARAM)

EnumRunParam = enum_type_wrapper.EnumTypeWrapper(_ENUMRUNPARAM)
_ENUMSHAPEFMT = _descriptor.EnumDescriptor(
  name='EnumShapeFmt',
  full_name='EnumShapeFmt',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_UND', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_BCWH', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_BHWC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_BCHW', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_ST_AI', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_RAW', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_CHANNEL_FIRST', index=6, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_CHANNEL_LAST', index=7, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_HAS_BATCH', index=8, number=64,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='F_SHAPE_FMT_POS', index=9, number=24,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3193,
  serialized_end=3447,
)
_sym_db.RegisterEnumDescriptor(_ENUMSHAPEFMT)

EnumShapeFmt = enum_type_wrapper.EnumTypeWrapper(_ENUMSHAPEFMT)
_ENUMDATAFMTTYPE = _descriptor.EnumDescriptor(
  name='EnumDataFmtType',
  full_name='EnumDataFmtType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DATA_FMT_TYPE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_FMT_TYPE_FLOAT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_FMT_TYPE_INTEGER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_FMT_TYPE_BOOL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_FMT_TYPE_FXP', index=4, number=15,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3450,
  serialized_end=3590,
)
_sym_db.RegisterEnumDescriptor(_ENUMDATAFMTTYPE)

EnumDataFmtType = enum_type_wrapper.EnumTypeWrapper(_ENUMDATAFMTTYPE)
_ENUMTENSORFLAG = _descriptor.EnumDescriptor(
  name='EnumTensorFlag',
  full_name='EnumTensorFlag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_INPUT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_OUTPUT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_INTERNAL', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_MEMPOOL', index=4, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_LAST', index=5, number=256,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_NO_DATA', index=6, number=512,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR_FLAG_IN_MEMPOOL', index=7, number=1024,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3593,
  serialized_end=3807,
)
_sym_db.RegisterEnumDescriptor(_ENUMTENSORFLAG)

EnumTensorFlag = enum_type_wrapper.EnumTypeWrapper(_ENUMTENSORFLAG)
_ENUMDATATYPE = _descriptor.EnumDescriptor(
  name='EnumDataType',
  full_name='EnumDataType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DATA_TYPE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_TYPE_FILTER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_TYPE_MD5', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_TYPE_POS', index=3, number=24,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3809,
  serialized_end=3903,
)
_sym_db.RegisterEnumDescriptor(_ENUMDATATYPE)

EnumDataType = enum_type_wrapper.EnumTypeWrapper(_ENUMDATATYPE)
_ENUMOPERATORFLAG = _descriptor.EnumDescriptor(
  name='EnumOperatorFlag',
  full_name='EnumOperatorFlag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_FLAG_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_FLAG_INTERNAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_FLAG_LAST', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_FLAG_WITHOUT_TENSOR', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_FLAG_POS', index=4, number=24,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3906,
  serialized_end=4057,
)
_sym_db.RegisterEnumDescriptor(_ENUMOPERATORFLAG)

EnumOperatorFlag = enum_type_wrapper.EnumTypeWrapper(_ENUMOPERATORFLAG)
P_VERSION_MAJOR = 3
P_VERSION_MINOR = 1
IO_HEADER_EOM_FLAG = 128
IO_HEADER_SIZE_MSK = 127
IO_IN_PACKET_SIZE = 32
IO_OUT_PACKET_SIZE = 32
IO_OUT_SYNC = 170
AI_RT_STM_AI = 1
AI_RT_TFLM = 2
AI_RT_TVM = 3
AI_RT_ATONN = 4
AI_RT_GLOW = 5
AI_RT_STM_AI_RELOC = 6
AI_RT_API_NONE = 0
AI_RT_API_ST_AI = 1
AI_RT_API_LITE = 2
AI_RT_API_RELOC = 4
AI_RT_API_POS = 8
AI_GCC = 1
AI_IAR = 2
AI_MDK_5 = 3
AI_MDK_6 = 4
AI_HTC = 5
AI_GHS = 6
AI_TOOLS_POS = 16
CAP_OBSERVER = 1
CAP_RELOC = 2
CAP_READ_WRITE = 8
CAP_RANDOM = 16
CAP_FILTERING = 32
CAP_SELF_TEST = 128
CMD_SYNC = 0
CMD_SYS_INFO = 1
CMD_NETWORK_INFO = 10
CMD_NETWORK_RUN = 11
CMD_NETWORK_REPORT = 12
CMD_MEMORY_READ = 20
CMD_MEMORY_WRITE = 21
CMD_MEMORY_CHECKSUM = 22
CMD_SET_FILTER = 30
CMD_TEST = 100
CMD_TEST_UNSUPPORTED = 200
S_IDLE = 0
S_WAITING = 1
S_PROCESSING = 2
S_DONE = 3
S_ERROR = 4
E_NONE = 0
E_INVALID_SIZE = 1
E_INVALID_FORMAT = 2
E_INVALID_STATE = 3
E_INVALID_PARAM = 4
E_INVALID_SHAPE = 5
E_INVALID_CMD = 6
E_INVALID_UNINITIALIZED = 7
E_MEM_OVERFLOW = 8
E_GENERIC = 10
COUNTER_FMT_64B = 0
COUNTER_FMT_32B = 1
COUNTER_FMT_MASK = 65535
COUNTER_FMT_POS = 16
COUNTER_TYPE_CPU = 0
COUNTER_TYPE_MASK = 65535
P_RUN_MODE_IO_ONLY = 1
P_RUN_MODE_PER_LAYER = 2
P_RUN_MODE_PER_LAYER_WITH_DATA = 4
P_RUN_MODE_PERF = 8
P_RUN_MODE_MASK = 15
P_RUN_CONF_DEBUG = 256
P_RUN_CONF_CONST_VALUE = 512
P_RUN_CONF_DIRECT_WRITE = 1024
P_RUN_CONF_DIRECT_READ = 2048
F_SHAPE_FMT_UND = 0
F_SHAPE_FMT_BCWH = 1
F_SHAPE_FMT_BHWC = 2
F_SHAPE_FMT_BCHW = 3
F_SHAPE_FMT_ST_AI = 4
F_SHAPE_FMT_RAW = 5
F_SHAPE_FMT_CHANNEL_FIRST = 16
F_SHAPE_FMT_CHANNEL_LAST = 32
F_SHAPE_FMT_HAS_BATCH = 64
F_SHAPE_FMT_POS = 24
DATA_FMT_TYPE_NONE = 0
DATA_FMT_TYPE_FLOAT = 1
DATA_FMT_TYPE_INTEGER = 2
DATA_FMT_TYPE_BOOL = 3
DATA_FMT_TYPE_FXP = 15
TENSOR_FLAG_NONE = 0
TENSOR_FLAG_INPUT = 1
TENSOR_FLAG_OUTPUT = 2
TENSOR_FLAG_INTERNAL = 4
TENSOR_FLAG_MEMPOOL = 8
TENSOR_FLAG_LAST = 256
TENSOR_FLAG_NO_DATA = 512
TENSOR_FLAG_IN_MEMPOOL = 1024
DATA_TYPE_NONE = 0
DATA_TYPE_FILTER = 1
DATA_TYPE_MD5 = 2
DATA_TYPE_POS = 24
OPERATOR_FLAG_NONE = 0
OPERATOR_FLAG_INTERNAL = 1
OPERATOR_FLAG_LAST = 2
OPERATOR_FLAG_WITHOUT_TENSOR = 4
OPERATOR_FLAG_POS = 24



_REQMSG = _descriptor.Descriptor(
  name='reqMsg',
  full_name='reqMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reqid', full_name='reqMsg.reqid', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cmd', full_name='reqMsg.cmd', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='param', full_name='reqMsg.param', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='reqMsg.name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='opt', full_name='reqMsg.opt', index=4,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=120,
)


_AITENSORDESCMSG = _descriptor.Descriptor(
  name='aiTensorDescMsg',
  full_name='aiTensorDescMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='aiTensorDescMsg.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='format', full_name='aiTensorDescMsg.format', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='aiTensorDescMsg.size', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_dims', full_name='aiTensorDescMsg.n_dims', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dims', full_name='aiTensorDescMsg.dims', index=4,
      number=5, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='aiTensorDescMsg.scale', index=5,
      number=6, type=2, cpp_type=6, label=2,
      has_default_value=True, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zeropoint', full_name='aiTensorDescMsg.zeropoint', index=6,
      number=7, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='aiTensorDescMsg.addr', index=7,
      number=8, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flags', full_name='aiTensorDescMsg.flags', index=8,
      number=9, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=298,
)


_AIDATAMSG = _descriptor.Descriptor(
  name='aiDataMsg',
  full_name='aiDataMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='aiDataMsg.type', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='aiDataMsg.size', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='aiDataMsg.addr', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='datas', full_name='aiDataMsg.datas', index=3,
      number=4, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=300,
  serialized_end=374,
)


_AIOPERATORMSG = _descriptor.Descriptor(
  name='aiOperatorMsg',
  full_name='aiOperatorMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='aiOperatorMsg.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='aiOperatorMsg.type', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='aiOperatorMsg.id', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='aiOperatorMsg.duration', index=3,
      number=4, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='counter_type', full_name='aiOperatorMsg.counter_type', index=4,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='counters', full_name='aiOperatorMsg.counters', index=5,
      number=6, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stack_used', full_name='aiOperatorMsg.stack_used', index=6,
      number=7, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heap_used', full_name='aiOperatorMsg.heap_used', index=7,
      number=8, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=377,
  serialized_end=529,
)


_AITENSORMSG = _descriptor.Descriptor(
  name='aiTensorMsg',
  full_name='aiTensorMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='desc', full_name='aiTensorMsg.desc', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='aiTensorMsg.data', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=602,
)


_AIMODELINFOMSG = _descriptor.Descriptor(
  name='aiModelInfoMsg',
  full_name='aiModelInfoMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='aiModelInfoMsg.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rtid', full_name='aiModelInfoMsg.rtid', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='aiModelInfoMsg.signature', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='compile_datetime', full_name='aiModelInfoMsg.compile_datetime', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runtime_version', full_name='aiModelInfoMsg.runtime_version', index=4,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tool_version', full_name='aiModelInfoMsg.tool_version', index=5,
      number=6, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_macc', full_name='aiModelInfoMsg.n_macc', index=6,
      number=7, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_nodes', full_name='aiModelInfoMsg.n_nodes', index=7,
      number=8, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_inputs', full_name='aiModelInfoMsg.n_inputs', index=8,
      number=10, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='aiModelInfoMsg.inputs', index=9,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_outputs', full_name='aiModelInfoMsg.n_outputs', index=10,
      number=12, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='outputs', full_name='aiModelInfoMsg.outputs', index=11,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_activations', full_name='aiModelInfoMsg.n_activations', index=12,
      number=14, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='activations', full_name='aiModelInfoMsg.activations', index=13,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_params', full_name='aiModelInfoMsg.n_params', index=14,
      number=16, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='params', full_name='aiModelInfoMsg.params', index=15,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runtime_desc', full_name='aiModelInfoMsg.runtime_desc', index=16,
      number=20, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=1016,
)


_SYNCMSG = _descriptor.Descriptor(
  name='syncMsg',
  full_name='syncMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='syncMsg.version', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capability', full_name='syncMsg.capability', index=1,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rtid', full_name='syncMsg.rtid', index=2,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1018,
  serialized_end=1078,
)


_SYSINFOMSG = _descriptor.Descriptor(
  name='sysinfoMsg',
  full_name='sysinfoMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devid', full_name='sysinfoMsg.devid', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sclock', full_name='sysinfoMsg.sclock', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hclock', full_name='sysinfoMsg.hclock', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cache', full_name='sysinfoMsg.cache', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extra', full_name='sysinfoMsg.extra', index=4,
      number=5, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1080,
  serialized_end=1169,
)


_ACKMSG = _descriptor.Descriptor(
  name='ackMsg',
  full_name='ackMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='param', full_name='ackMsg.param', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='ackMsg.error', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1171,
  serialized_end=1221,
)


_LOGMSG = _descriptor.Descriptor(
  name='logMsg',
  full_name='logMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='logMsg.level', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='str', full_name='logMsg.str', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1223,
  serialized_end=1259,
)


_RESPMSG = _descriptor.Descriptor(
  name='respMsg',
  full_name='respMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reqid', full_name='respMsg.reqid', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='respMsg.state', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sync', full_name='respMsg.sync', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sinfo', full_name='respMsg.sinfo', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ack', full_name='respMsg.ack', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='respMsg.log', index=5,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='respMsg.data', index=6,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='op', full_name='respMsg.op', index=7,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='respMsg.tensor', index=8,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minfo', full_name='respMsg.minfo', index=9,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='respMsg.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1262,
  serialized_end=1552,
)

_REQMSG.fields_by_name['cmd'].enum_type = _ENUMCMD
_AITENSORMSG.fields_by_name['desc'].message_type = _AITENSORDESCMSG
_AITENSORMSG.fields_by_name['data'].message_type = _AIDATAMSG
_AIMODELINFOMSG.fields_by_name['inputs'].message_type = _AITENSORDESCMSG
_AIMODELINFOMSG.fields_by_name['outputs'].message_type = _AITENSORDESCMSG
_AIMODELINFOMSG.fields_by_name['activations'].message_type = _AITENSORDESCMSG
_AIMODELINFOMSG.fields_by_name['params'].message_type = _AITENSORDESCMSG
_ACKMSG.fields_by_name['error'].enum_type = _ENUMERROR
_RESPMSG.fields_by_name['state'].enum_type = _ENUMSTATE
_RESPMSG.fields_by_name['sync'].message_type = _SYNCMSG
_RESPMSG.fields_by_name['sinfo'].message_type = _SYSINFOMSG
_RESPMSG.fields_by_name['ack'].message_type = _ACKMSG
_RESPMSG.fields_by_name['log'].message_type = _LOGMSG
_RESPMSG.fields_by_name['data'].message_type = _AIDATAMSG
_RESPMSG.fields_by_name['op'].message_type = _AIOPERATORMSG
_RESPMSG.fields_by_name['tensor'].message_type = _AITENSORMSG
_RESPMSG.fields_by_name['minfo'].message_type = _AIMODELINFOMSG
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['sync'])
_RESPMSG.fields_by_name['sync'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['sinfo'])
_RESPMSG.fields_by_name['sinfo'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['ack'])
_RESPMSG.fields_by_name['ack'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['log'])
_RESPMSG.fields_by_name['log'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['data'])
_RESPMSG.fields_by_name['data'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['op'])
_RESPMSG.fields_by_name['op'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['tensor'])
_RESPMSG.fields_by_name['tensor'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
_RESPMSG.oneofs_by_name['payload'].fields.append(
  _RESPMSG.fields_by_name['minfo'])
_RESPMSG.fields_by_name['minfo'].containing_oneof = _RESPMSG.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['reqMsg'] = _REQMSG
DESCRIPTOR.message_types_by_name['aiTensorDescMsg'] = _AITENSORDESCMSG
DESCRIPTOR.message_types_by_name['aiDataMsg'] = _AIDATAMSG
DESCRIPTOR.message_types_by_name['aiOperatorMsg'] = _AIOPERATORMSG
DESCRIPTOR.message_types_by_name['aiTensorMsg'] = _AITENSORMSG
DESCRIPTOR.message_types_by_name['aiModelInfoMsg'] = _AIMODELINFOMSG
DESCRIPTOR.message_types_by_name['syncMsg'] = _SYNCMSG
DESCRIPTOR.message_types_by_name['sysinfoMsg'] = _SYSINFOMSG
DESCRIPTOR.message_types_by_name['ackMsg'] = _ACKMSG
DESCRIPTOR.message_types_by_name['logMsg'] = _LOGMSG
DESCRIPTOR.message_types_by_name['respMsg'] = _RESPMSG
DESCRIPTOR.enum_types_by_name['EnumVersion'] = _ENUMVERSION
DESCRIPTOR.enum_types_by_name['EnumLowLevelIO'] = _ENUMLOWLEVELIO
DESCRIPTOR.enum_types_by_name['EnumAiRuntime'] = _ENUMAIRUNTIME
DESCRIPTOR.enum_types_by_name['EnumAiApiRuntime'] = _ENUMAIAPIRUNTIME
DESCRIPTOR.enum_types_by_name['EnumTools'] = _ENUMTOOLS
DESCRIPTOR.enum_types_by_name['EnumCapability'] = _ENUMCAPABILITY
DESCRIPTOR.enum_types_by_name['EnumCmd'] = _ENUMCMD
DESCRIPTOR.enum_types_by_name['EnumState'] = _ENUMSTATE
DESCRIPTOR.enum_types_by_name['EnumError'] = _ENUMERROR
DESCRIPTOR.enum_types_by_name['EnumCounterFormat'] = _ENUMCOUNTERFORMAT
DESCRIPTOR.enum_types_by_name['EnumCounterType'] = _ENUMCOUNTERTYPE
DESCRIPTOR.enum_types_by_name['EnumRunParam'] = _ENUMRUNPARAM
DESCRIPTOR.enum_types_by_name['EnumShapeFmt'] = _ENUMSHAPEFMT
DESCRIPTOR.enum_types_by_name['EnumDataFmtType'] = _ENUMDATAFMTTYPE
DESCRIPTOR.enum_types_by_name['EnumTensorFlag'] = _ENUMTENSORFLAG
DESCRIPTOR.enum_types_by_name['EnumDataType'] = _ENUMDATATYPE
DESCRIPTOR.enum_types_by_name['EnumOperatorFlag'] = _ENUMOPERATORFLAG

reqMsg = _reflection.GeneratedProtocolMessageType('reqMsg', (_message.Message,), dict(
  DESCRIPTOR = _REQMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:reqMsg)
  ))
_sym_db.RegisterMessage(reqMsg)

aiTensorDescMsg = _reflection.GeneratedProtocolMessageType('aiTensorDescMsg', (_message.Message,), dict(
  DESCRIPTOR = _AITENSORDESCMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:aiTensorDescMsg)
  ))
_sym_db.RegisterMessage(aiTensorDescMsg)

aiDataMsg = _reflection.GeneratedProtocolMessageType('aiDataMsg', (_message.Message,), dict(
  DESCRIPTOR = _AIDATAMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:aiDataMsg)
  ))
_sym_db.RegisterMessage(aiDataMsg)

aiOperatorMsg = _reflection.GeneratedProtocolMessageType('aiOperatorMsg', (_message.Message,), dict(
  DESCRIPTOR = _AIOPERATORMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:aiOperatorMsg)
  ))
_sym_db.RegisterMessage(aiOperatorMsg)

aiTensorMsg = _reflection.GeneratedProtocolMessageType('aiTensorMsg', (_message.Message,), dict(
  DESCRIPTOR = _AITENSORMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:aiTensorMsg)
  ))
_sym_db.RegisterMessage(aiTensorMsg)

aiModelInfoMsg = _reflection.GeneratedProtocolMessageType('aiModelInfoMsg', (_message.Message,), dict(
  DESCRIPTOR = _AIMODELINFOMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:aiModelInfoMsg)
  ))
_sym_db.RegisterMessage(aiModelInfoMsg)

syncMsg = _reflection.GeneratedProtocolMessageType('syncMsg', (_message.Message,), dict(
  DESCRIPTOR = _SYNCMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:syncMsg)
  ))
_sym_db.RegisterMessage(syncMsg)

sysinfoMsg = _reflection.GeneratedProtocolMessageType('sysinfoMsg', (_message.Message,), dict(
  DESCRIPTOR = _SYSINFOMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:sysinfoMsg)
  ))
_sym_db.RegisterMessage(sysinfoMsg)

ackMsg = _reflection.GeneratedProtocolMessageType('ackMsg', (_message.Message,), dict(
  DESCRIPTOR = _ACKMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:ackMsg)
  ))
_sym_db.RegisterMessage(ackMsg)

logMsg = _reflection.GeneratedProtocolMessageType('logMsg', (_message.Message,), dict(
  DESCRIPTOR = _LOGMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:logMsg)
  ))
_sym_db.RegisterMessage(logMsg)

respMsg = _reflection.GeneratedProtocolMessageType('respMsg', (_message.Message,), dict(
  DESCRIPTOR = _RESPMSG,
  __module__ = 'stm32msg_pb2'
  # @@protoc_insertion_point(class_scope:respMsg)
  ))
_sym_db.RegisterMessage(respMsg)


_ENUMLOWLEVELIO.has_options = True
_ENUMLOWLEVELIO._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
