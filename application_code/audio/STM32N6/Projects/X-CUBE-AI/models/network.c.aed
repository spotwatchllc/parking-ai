/* AUTOGENERATED DO NOT MODIFY */

/**
  ******************************************************************************
  * @file    network.c
  * @brief   NN Code autogenerated DO NOT MODIFY IT
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */

/*
 * GIT_SHA         "0307e413493a9893cb1f0a1266b856e2af3bba2b"
 * GIT_BRANCH      "STAI-2.0"
 * GIT_DESCRIPTION "STAI-2.0-RC1-1-1-g0307e413"
 *
 * Command Line options:
 * --onnx-input = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_output/yamnet_1024_64x96_tl_qdq_int8_OE_3_1_0.onnx"
 * --out-dir-prefix = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_ws/neural_art__network/"
 * --all-buffers-info = true
 * --mvei = true
 * --load-mdesc-file = "C:/ST/stedgeai-windows-10.0.0-RC1-16-signed/Utilities/configs/stm32n6"
 * --load-mpool-file = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/stm32n6"
 * --cache-maintenance = true
 * --native-float = true
 * --json-quant-file = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_output/yamnet_1024_64x96_tl_qdq_int8_OE_3_1_0_Q.json"
 * --optimization = 3
 * --Os = true
 * --Omax-ca-pipe = 4
 * --Ocache-opt = true
 * --csv-file = "network"
 * --output-info-file = "c_info"
 */

#include "ll_aton_NN_interface.h"
#include "ll_aton.h"
#include "ll_aton_lib.h"
#include "ll_aton_version.h"
#include "ll_sw.h"

#if LL_ATON_VERSION_MAJOR != 1 || LL_ATON_VERSION_MINOR != 0 || LL_ATON_VERSION_MICRO != 0 || LL_ATON_VERSION_DEV != 16
#  warning "Possible mismatch in ll_aton library used"
#endif

#if !defined(LL_ATON_DBG_BUFFER_INFO_EXCLUDED)
#  define LL_ATON_DBG_BUFFER_INFO_EXCLUDED 0
#endif

/* global pool 4 is ? */
/* index=4 file postfix=xSPI1 name=hyperRAM offset=0x90000000  absolute_mode size=16777208 READ_WRITE THROUGHPUT=MID LATENCY=HIGH byte width=2 freq ratio=5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=380 write_power=340 use4initializers=YES score=82  */
/* global pool 5 is 3.42 MB */
/* index=5 file postfix=xSPI2 name=octoFlash offset=0x70180000  absolute_mode size=66060280 READ_ONLY THROUGHPUT=MID LATENCY=HIGH byte width=1 freq ratio=6 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=110 write_power=400 use4initializers=YES score=50  */
/* global pool 0 is 144.00 KB */
/* index=0 file postfix=AXISRAM6 name=npuRAM6 offset=0x34350000  absolute_mode size=458744 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=19.006 write_power=15.79 use4initializers=NO score=94  */
/* global pool 1 is ? */
/* index=1 file postfix=AXISRAM2 name=cpuRAM2 offset=0x34100000  absolute_mode size=1048568 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=17.324 write_power=15.321 use4initializers=NO score=84  */
/* global pool 2 is ? */
/* index=2 file postfix=AXIFLEXMEM name=flexMEM offset=0x34000000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=9.381 write_power=8.569 use4initializers=NO score=84  */
/* global pool 3 is ? */
/* index=3 file postfix=AXISRAM1 name=cpuRAM1 offset=0x34000000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=16.616 write_power=14.522 use4initializers=NO score=84  */

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Input_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Output_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

bool LL_ATON_EC_Network_Init_Default(void)
{
  return true;
}

bool LL_ATON_EC_Inference_Init_Default(void)
{
  return true;
}

/* scheduling epoch=0    nodes=115 ------------------------------------------------------------------- */

/* scheduling epoch=1    nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_1(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) /* Equivalent hex address = 0x3435c000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) /* Equivalent hex address = 0x3435d800UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_2 */
  static const uint32_t Transpose_2_tensor_shape_in_1_shape_0[] = { 1, 64, 96, 1 };
  static const LL_LIB_TensorShape_TypeDef Transpose_2_tensor_shape_in_1[] = {
    {
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 6144,
      .offset_limit = 6208,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_2_tensor_shape_in_1_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_2_tensor_axes_offsets_in_1_0[] = { 6144, 96, 1, 1 };
  static const uint32_t* Transpose_2_tensor_axes_offsets_in_1[] = {
    Transpose_2_tensor_axes_offsets_in_1_0
  };

  static const uint32_t Transpose_2_tensor_shape_out_1_shape_0[] = { 1, 96, 64, 1 };
  static const LL_LIB_TensorShape_TypeDef Transpose_2_tensor_shape_out_1[] = {
    {
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 49152,
      .offset_end = 55296,
      .offset_limit = 55360,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_2_tensor_shape_out_1_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_2_tensor_axes_offsets_out_1_0[] = { 6144, 64, 1, 1 };
  static const uint32_t* Transpose_2_tensor_axes_offsets_out_1[] = {
    Transpose_2_tensor_axes_offsets_out_1_0
  };

  static const uint8_t Transpose_2_perm_to_use_array_in_1[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_2_target_pos_array_in_1[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_2_tensor_shape_in_1[0], Transpose_2_tensor_axes_offsets_in_1[0], &Transpose_2_tensor_shape_out_1[0], Transpose_2_tensor_axes_offsets_out_1[0], Transpose_2_target_pos_array_in_1, Transpose_2_perm_to_use_array_in_1, 0, 1);

  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) /* Equivalent hex address = 0x3435c000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) /* Equivalent hex address = 0x3435d800UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=2    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_2(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_3 */
  static const LL_Convacc_InitTypeDef Conv2D_3_init2 = {
    .simd = 2,
    .fsub = 33,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 96,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 4,
    .batchDepth = 1,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 95,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_3_init2);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_3_mul_scale_9 */
  static const LL_Arithacc_InitTypeDef Conv2D_3_mul_scale_9_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580496) /* Equivalent hex address = 0x704ea250UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_3_mul_scale_9_init2);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_3_off_bias_12 */
  static const LL_Arithacc_InitTypeDef Conv2D_3_off_bias_12_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18122,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579984) /* Equivalent hex address = 0x704ea050UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_3_off_bias_12_init2);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Sub node=Conv2D_7_suboff_15 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_suboff_15_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_7_suboff_15_init2);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_3 input ports=0 range=0[49152,55296] */

  static const LL_Streng_TensorInitTypeDef Conv2D_3_dma_init_in_0_2 = {
    /* 64x96x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_3_zero_off_out_7 */
    .offset_start = 49152,
    .offset_end = 55296,
    .offset_limit = 55360,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_3_dma_init_in_0_2, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_3 input ports=1 range=5[3578160,3578448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_3_dma_init_in_1_2 = {
    /* 32x3x3x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_3_weights */
    .offset_start = 3578160,
    .offset_end = 3578448,
    .offset_limit = 3578512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_3_dma_init_in_1_2, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 288 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7_suboff_15 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_suboff_15_dma_init_out_0_2 = {
    /* to memory canonical from batch=4 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_7_zero_off_out_16 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 4,
    .batch_offset = 32,
    .frame_offset = 4,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_7_suboff_15_dma_init_out_0_2, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_2[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_mul_scale_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_off_bias_12 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=2 */
  LL_Switch_Init(switch_init_in_2, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_2_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_2_all_units, 7);

}

static void LL_ATON_End_EpochBlock_2(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_2[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_mul_scale_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_off_bias_12 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=2 */
  LL_Switch_Deinit(switch_deinit_in_2, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_2_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_2_all_units, 7);

}


/* scheduling epoch=3    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_7 */
  static const LL_Convacc_InitTypeDef Conv2D_7_init3 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_7_init3);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_7_mul_scale_18 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_mul_scale_18_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580560) /* Equivalent hex address = 0x704ea290UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_7_mul_scale_18_init3);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_7_off_bias_21 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_off_bias_21_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 31452,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580112) /* Equivalent hex address = 0x704ea0d0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_7_off_bias_21_init3);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_10_suboff_24 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_suboff_24_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_10_suboff_24_init3);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_dma_init_in_0_3 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_7_zero_off_out_16 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_7_dma_init_in_0_3, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7 input ports=1 range=5[3528736,3531040] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_dma_init_in_1_3 = {
    /* 32x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_7_weights_inflated_260 */
    .offset_start = 3528736,
    .offset_end = 3531040,
    .offset_limit = 3531104,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_7_dma_init_in_1_3, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 2304 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10_suboff_24 output ports=0 range=0[98304,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_suboff_24_dma_init_out_0_3 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_10_zero_off_out_25 */
    .offset_start = 98304,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_10_suboff_24_dma_init_out_0_3, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_mul_scale_18 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_off_bias_21 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Init(switch_init_in_3, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_3_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_3_all_units, 7);

}

static void LL_ATON_End_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_mul_scale_18 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_off_bias_21 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Deinit(switch_deinit_in_3, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_3_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_3_all_units, 7);

}


/* scheduling epoch=4    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_10 */
  static const LL_Convacc_InitTypeDef Conv2D_10_init4 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 32,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_10_init4);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_10_mul_scale_27 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_mul_scale_27_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580240) /* Equivalent hex address = 0x704ea150UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_10_mul_scale_27_init4);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_10_off_bias_30 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_off_bias_30_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17078,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578448) /* Equivalent hex address = 0x704e9a50UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_10_off_bias_30_init4);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_14_suboff_33 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_suboff_33_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_14_suboff_33_init4);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10 input ports=0 range=0[98304,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_dma_init_in_0_4 = {
    /* 32x48x32(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_10_zero_off_out_25 */
    .offset_start = 98304,
    .offset_end = 147456,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_10_dma_init_in_0_4, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10 input ports=1 range=5[3531040,3533092] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_dma_init_in_1_4 = {
    /* 64x1x1x32(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_10_weights */
    .offset_start = 3531040,
    .offset_end = 3533092,
    .offset_limit = 3533160,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_10_dma_init_in_1_4, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 2048 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14_suboff_33 output ports=0 range=0[0,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_suboff_33_dma_init_out_0_4 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_14_zero_off_out_34 */
    .offset_start = 0,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_14_suboff_33_dma_init_out_0_4, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 98304 */

  static const LL_Switch_InitTypeDef switch_init_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_mul_scale_27 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_off_bias_30 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Init(switch_init_in_4, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_4_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_4_all_units, 7);

}

static void LL_ATON_End_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_mul_scale_27 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_off_bias_30 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Deinit(switch_deinit_in_4, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_4_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_4_all_units, 7);

}


/* scheduling epoch=5    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_14 */
  static const LL_Convacc_InitTypeDef Conv2D_14_init5 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_14_init5);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_14_mul_scale_36 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_mul_scale_36_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580368) /* Equivalent hex address = 0x704ea1d0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_14_mul_scale_36_init5);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_14_off_bias_39 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_off_bias_39_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16386,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578704) /* Equivalent hex address = 0x704e9b50UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_14_off_bias_39_init5);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_17_suboff_42 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_suboff_42_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_17_suboff_42_init5);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14 input ports=0 range=0[0,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_dma_init_in_0_5 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_14_zero_off_out_34 */
    .offset_start = 0,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_14_dma_init_in_0_5, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14 input ports=1 range=5[3499552,3504160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_dma_init_in_1_5 = {
    /* 64x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_14_weights_inflated_262 */
    .offset_start = 3499552,
    .offset_end = 3504160,
    .offset_limit = 3504224,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_14_dma_init_in_1_5, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 98304 */
  /* octoFlash -> 4608 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17_suboff_42 output ports=0 range=0[98304,122880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_suboff_42_dma_init_out_0_5 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_17_zero_off_out_43 */
    .offset_start = 98304,
    .offset_limit = 122944,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_17_suboff_42_dma_init_out_0_5, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_mul_scale_36 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_off_bias_39 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Init(switch_init_in_5, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_5_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_5_all_units, 7);

}

static void LL_ATON_End_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_mul_scale_36 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_off_bias_39 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Deinit(switch_deinit_in_5, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_5_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_5_all_units, 7);

}


/* scheduling epoch=6    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_17 */
  static const LL_Convacc_InitTypeDef Conv2D_17_init6 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 64,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_17_init6);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_17_mul_scale_45 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_mul_scale_45_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578960) /* Equivalent hex address = 0x704e9c50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_17_mul_scale_45_init6);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_17_off_bias_48 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_off_bias_48_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19318,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3574064) /* Equivalent hex address = 0x704e8930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_17_off_bias_48_init6);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_21_suboff_51 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_suboff_51_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_21_suboff_51_init6);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17 input ports=0 range=0[98304,122880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_dma_init_in_0_6 = {
    /* 16x24x64(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_17_zero_off_out_43 */
    .offset_start = 98304,
    .offset_end = 122880,
    .offset_limit = 122944,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_17_dma_init_in_0_6, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17 input ports=1 range=5[3491344,3499552] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_dma_init_in_1_6 = {
    /* 128x1x1x64(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_17_weights */
    .offset_start = 3491344,
    .offset_end = 3499552,
    .offset_limit = 3499616,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_17_dma_init_in_1_6, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 8192 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21_suboff_51 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_suboff_51_dma_init_out_0_6 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_21_zero_off_out_52 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 16,
    .batch_offset = 128,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_21_suboff_51_dma_init_out_0_6, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_mul_scale_45 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_off_bias_48 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Init(switch_init_in_6, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_6_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_6_all_units, 7);

}

static void LL_ATON_End_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_mul_scale_45 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_off_bias_48 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Deinit(switch_deinit_in_6, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_6_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_6_all_units, 7);

}


/* scheduling epoch=7    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_21 */
  static const LL_Convacc_InitTypeDef Conv2D_21_init7 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_21_init7);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_21_mul_scale_54 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_mul_scale_54_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579216) /* Equivalent hex address = 0x704e9d50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_21_mul_scale_54_init7);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_21_off_bias_57 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_off_bias_57_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17048,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3574576) /* Equivalent hex address = 0x704e8b30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_21_off_bias_57_init7);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_24_suboff_60 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_suboff_60_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_24_suboff_60_init7);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_dma_init_in_0_7 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_21_zero_off_out_52 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_21_dma_init_in_0_7, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21 input ports=1 range=5[3472912,3482128] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_dma_init_in_1_7 = {
    /* 128x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_21_weights_inflated_264 */
    .offset_start = 3472912,
    .offset_end = 3482128,
    .offset_limit = 3482192,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_21_dma_init_in_1_7, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24_suboff_60 output ports=0 range=0[49152,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_suboff_60_dma_init_out_0_7 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_24_zero_off_out_61 */
    .offset_start = 49152,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_24_suboff_60_dma_init_out_0_7, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_mul_scale_54 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_off_bias_57 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Init(switch_init_in_7, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_7_all_units, 7);

}

static void LL_ATON_End_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_mul_scale_54 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_off_bias_57 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Deinit(switch_deinit_in_7, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_7_all_units, 7);

}


/* scheduling epoch=8    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_8(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_24 */
  static const LL_Convacc_InitTypeDef Conv2D_24_init8 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_24_init8);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_24_mul_scale_63 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_mul_scale_63_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579472) /* Equivalent hex address = 0x704e9e50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_24_mul_scale_63_init8);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_24_off_bias_66 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_off_bias_66_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20867,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3575088) /* Equivalent hex address = 0x704e8d30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_24_off_bias_66_init8);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_28_suboff_69 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_suboff_69_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_28_suboff_69_init8);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24 input ports=0 range=0[49152,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_dma_init_in_0_8 = {
    /* 16x24x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_24_zero_off_out_61 */
    .offset_start = 49152,
    .offset_end = 98304,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_24_dma_init_in_0_8, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24 input ports=1 range=5[3446256,3462648] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_dma_init_in_1_8 = {
    /* 128x1x1x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_24_weights */
    .offset_start = 3446256,
    .offset_end = 3462648,
    .offset_limit = 3462712,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_24_dma_init_in_1_8, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 393216 */
  /* octoFlash -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28_suboff_69 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_suboff_69_dma_init_out_0_8 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_28_zero_off_out_70 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 16,
    .batch_offset = 128,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_28_suboff_69_dma_init_out_0_8, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_8[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_mul_scale_63 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_off_bias_66 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=8 */
  LL_Switch_Init(switch_init_in_8, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_8_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_8_all_units, 7);

}

static void LL_ATON_End_EpochBlock_8(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_8[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_mul_scale_63 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_off_bias_66 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=8 */
  LL_Switch_Deinit(switch_deinit_in_8, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_8_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_8_all_units, 7);

}


/* scheduling epoch=9    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_28 */
  static const LL_Convacc_InitTypeDef Conv2D_28_init9 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_28_init9);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_28_mul_scale_72 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_mul_scale_72_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579728) /* Equivalent hex address = 0x704e9f50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_28_mul_scale_72_init9);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_28_off_bias_75 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_off_bias_75_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18806,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3575600) /* Equivalent hex address = 0x704e8f30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_28_off_bias_75_init9);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_31_suboff_78 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_suboff_78_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_31_suboff_78_init9);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_dma_init_in_0_9 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_28_zero_off_out_70 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_28_dma_init_in_0_9, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28 input ports=1 range=5[3482128,3491344] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_dma_init_in_1_9 = {
    /* 128x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_28_weights_inflated_266 */
    .offset_start = 3482128,
    .offset_end = 3491344,
    .offset_limit = 3491408,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_28_dma_init_in_1_9, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31_suboff_78 output ports=0 range=0[49152,61440] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_suboff_78_dma_init_out_0_9 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_31_zero_off_out_79 */
    .offset_start = 49152,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_31_suboff_78_dma_init_out_0_9, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_mul_scale_72 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_off_bias_75 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Init(switch_init_in_9, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_9_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_9_all_units, 7);

}

static void LL_ATON_End_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_mul_scale_72 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_off_bias_75 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Deinit(switch_deinit_in_9, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_9_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_9_all_units, 7);

}


/* scheduling epoch=10   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_10(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_31 */
  static const LL_Convacc_InitTypeDef Conv2D_31_init10 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_31_init10);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_31_mul_scale_81 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_mul_scale_81_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3576112) /* Equivalent hex address = 0x704e9130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_31_mul_scale_81_init10);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_31_off_bias_84 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_off_bias_84_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23696,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3557680) /* Equivalent hex address = 0x704e4930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_31_off_bias_84_init10);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_35_suboff_87 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_suboff_87_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_35_suboff_87_init10);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31 input ports=0 range=0[49152,61440] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_dma_init_in_0_10 = {
    /* 8x12x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_31_zero_off_out_79 */
    .offset_start = 49152,
    .offset_end = 61440,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_31_dma_init_in_0_10, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31 input ports=1 range=5[3376608,3409392] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_dma_init_in_1_10 = {
    /* 256x1x1x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_31_weights */
    .offset_start = 3376608,
    .offset_end = 3409392,
    .offset_limit = 3409456,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_31_dma_init_in_1_10, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 32768 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35_suboff_87 output ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_suboff_87_dma_init_out_0_10 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_35_zero_off_out_88 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 16,
    .batch_offset = 256,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_35_suboff_87_dma_init_out_0_10, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_10[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_mul_scale_81 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_off_bias_84 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=10 */
  LL_Switch_Init(switch_init_in_10, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_10_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_10_all_units, 7);

}

static void LL_ATON_End_EpochBlock_10(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_10[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_mul_scale_81 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_off_bias_84 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=10 */
  LL_Switch_Deinit(switch_deinit_in_10, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_10_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_10_all_units, 7);

}


/* scheduling epoch=11   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_35 */
  static const LL_Convacc_InitTypeDef Conv2D_35_init11 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_35_init11);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_35_mul_scale_90 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_mul_scale_90_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3576624) /* Equivalent hex address = 0x704e9330UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_35_mul_scale_90_init11);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_35_off_bias_93 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_off_bias_93_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19098,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3558704) /* Equivalent hex address = 0x704e4d30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_35_off_bias_93_init11);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_38_suboff_96 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_suboff_96_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_38_suboff_96_init11);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35 input ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_dma_init_in_0_11 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_35_zero_off_out_88 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_35_dma_init_in_0_11, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35 input ports=1 range=5[3409392,3427824] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_dma_init_in_1_11 = {
    /* 256x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_35_weights_inflated_268 */
    .offset_start = 3409392,
    .offset_end = 3427824,
    .offset_limit = 3427888,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_35_dma_init_in_1_11, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 24576 */
  /* octoFlash -> 18432 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38_suboff_96 output ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_suboff_96_dma_init_out_0_11 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97 */
    .offset_start = 24576,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_38_suboff_96_dma_init_out_0_11, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_mul_scale_90 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_off_bias_93 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Init(switch_init_in_11, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_11_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_11_all_units, 7);

}

static void LL_ATON_End_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_mul_scale_90 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_off_bias_93 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Deinit(switch_deinit_in_11, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_11_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_11_all_units, 7);

}


/* scheduling epoch=12   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_38 */
  static const LL_Convacc_InitTypeDef Conv2D_38_init12 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_38_init12);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_38_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_38_ca_pipe_1_init12 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_38_ca_pipe_1_init12);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_38_mul_scale_99 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_mul_scale_99_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3577136) /* Equivalent hex address = 0x704e9530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_38_mul_scale_99_init12);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_38_off_bias_102 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_off_bias_102_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26063,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3559728) /* Equivalent hex address = 0x704e5130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_38_off_bias_102_init12);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_42_suboff_105 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_suboff_105_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_42_suboff_105_init12);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38 input ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_dma_init_in_0_12 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97 */
    .offset_start = 24576,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_38_dma_init_in_0_12, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38 input ports=1 range=5[3089856,3155424] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_dma_init_in_1_12 = {
    /* 256x1x1x256(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_38_weights */
    .offset_start = 3089856,
    .offset_end = 3091905,
    .offset_limit = 3155488,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_38_dma_init_in_1_12, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38_ca_pipe_1 input ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_ca_pipe_1_dma_init_in_0_12 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97_copy_in_1 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_38_ca_pipe_1_dma_init_in_0_12, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 393216 */
  /* octoFlash -> 65536 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42_suboff_105 output ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_suboff_105_dma_init_out_0_12 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_42_zero_off_out_106 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 16,
    .batch_offset = 256,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_42_suboff_105_dma_init_out_0_12, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_mul_scale_99 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_off_bias_102 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Init(switch_init_in_12, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_12_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_12_all_units, 9);

}

static void LL_ATON_End_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_mul_scale_99 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_off_bias_102 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Deinit(switch_deinit_in_12, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_12_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_12_all_units, 9);

}


/* scheduling epoch=13   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_42 */
  static const LL_Convacc_InitTypeDef Conv2D_42_init13 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_42_init13);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_42_mul_scale_108 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_mul_scale_108_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3577648) /* Equivalent hex address = 0x704e9730UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_42_mul_scale_108_init13);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_42_off_bias_111 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_off_bias_111_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22853,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3560752) /* Equivalent hex address = 0x704e5530UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_42_off_bias_111_init13);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_45_suboff_114 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_suboff_114_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_45_suboff_114_init13);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42 input ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_dma_init_in_0_13 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_42_zero_off_out_106 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_42_dma_init_in_0_13, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42 input ports=1 range=5[3427824,3446256] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_dma_init_in_1_13 = {
    /* 256x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_42_weights_inflated_270 */
    .offset_start = 3427824,
    .offset_end = 3446256,
    .offset_limit = 3446320,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_42_dma_init_in_1_13, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 24576 */
  /* octoFlash -> 18432 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45_suboff_114 output ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_suboff_114_dma_init_out_0_13 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115 */
    .offset_start = 24576,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_45_suboff_114_dma_init_out_0_13, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_mul_scale_108 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_off_bias_111 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Init(switch_init_in_13, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_13_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_13_all_units, 7);

}

static void LL_ATON_End_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_mul_scale_108 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_off_bias_111 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Deinit(switch_deinit_in_13, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_13_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_13_all_units, 7);

}


/* scheduling epoch=14   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_14(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_45 */
  static const LL_Convacc_InitTypeDef Conv2D_45_init14 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_45_init14);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_45_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_45_ca_pipe_1_init14 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_45_ca_pipe_1_init14);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_45_mul_scale_117 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_mul_scale_117_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3561776) /* Equivalent hex address = 0x704e5930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_45_mul_scale_117_init14);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_45_off_bias_120 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_off_bias_120_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26874,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3533104) /* Equivalent hex address = 0x704de930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_45_off_bias_120_init14);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_49_suboff_123 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_suboff_123_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_49_suboff_123_init14);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45 input ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_dma_init_in_0_14 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115 */
    .offset_start = 24576,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_45_dma_init_in_0_14, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45 input ports=1 range=5[2884992,3016128] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_dma_init_in_1_14 = {
    /* 512x1x1x256(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_45_weights */
    .offset_start = 2884992,
    .offset_end = 2887041,
    .offset_limit = 3016192,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_45_dma_init_in_1_14, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45_ca_pipe_1 input ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_ca_pipe_1_dma_init_in_0_14 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115_copy_in_2 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_45_ca_pipe_1_dma_init_in_0_14, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 131072 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_suboff_123 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_suboff_123_dma_init_out_0_14 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_49_suboff_123_dma_init_out_0_14, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_14[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_mul_scale_117 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_off_bias_120 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=14 */
  LL_Switch_Init(switch_init_in_14, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_14_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_14_all_units, 9);

}

static void LL_ATON_End_EpochBlock_14(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_14[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_mul_scale_117 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_off_bias_120 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=14 */
  LL_Switch_Deinit(switch_deinit_in_14, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_14_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_14_all_units, 9);

}


/* scheduling epoch=15   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_49_conv_identity */

static void LL_ATON_Start_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_49_conv_identity */
  /* node=Conv2D_49_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_conv_identity_dma_init_in_0_15 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124_copy_in_9 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_49_conv_identity_dma_init_in_0_15, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_conv_identity_dma_init_out_0_15 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124_cp_in_9 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_49_conv_identity_dma_init_out_0_15, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_conv_identity OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Init(switch_init_in_15, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_15_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_15_all_units, 2);

}

static void LL_ATON_End_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_conv_identity OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Deinit(switch_deinit_in_15, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_15_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_15_all_units, 2);

}


/* scheduling epoch=16   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_16(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_49 */
  static const LL_Convacc_InitTypeDef Conv2D_49_init16 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_49_init16);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_49_mul_scale_126 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_mul_scale_126_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3562800) /* Equivalent hex address = 0x704e5d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_49_mul_scale_126_init16);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_49_off_bias_129 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_off_bias_129_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20028,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3535152) /* Equivalent hex address = 0x704df130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_49_off_bias_129_init16);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_52_suboff_132 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_suboff_132_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_52_suboff_132_init16);


  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_dma_init_in_0_16 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_49_dma_init_in_0_16, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49 input ports=1 range=5[3155424,3192288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_dma_init_in_1_16 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_49_weights_inflated_272 */
    .offset_start = 3155424,
    .offset_end = 3192288,
    .offset_limit = 3192352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_49_dma_init_in_1_16, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_suboff_132 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_suboff_132_dma_init_out_0_16 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_52_suboff_132_dma_init_out_0_16, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_16[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_mul_scale_126 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_off_bias_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=16 */
  LL_Switch_Init(switch_init_in_16, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_16_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_16_all_units, 7);

}

static void LL_ATON_End_EpochBlock_16(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_16[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_mul_scale_126 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_off_bias_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=16 */
  LL_Switch_Deinit(switch_deinit_in_16, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_16_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_16_all_units, 7);

}


/* scheduling epoch=17   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_52 */
  static const LL_Convacc_InitTypeDef Conv2D_52_init17 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_52_init17);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_52_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_52_ca_pipe_1_init17 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_52_ca_pipe_1_init17);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_52_mul_scale_135 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_mul_scale_135_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3563824) /* Equivalent hex address = 0x704e6130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_52_mul_scale_135_init17);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_52_off_bias_138 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_off_bias_138_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27581,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3537200) /* Equivalent hex address = 0x704df930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_52_off_bias_138_init17);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_56_suboff_141 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_suboff_141_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_56_suboff_141_init17);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_0_17 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_52_dma_init_in_0_17, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=1 range=5[1573632,1835904] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_1_17 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_52_weights */
    .offset_start = 1573632,
    .offset_end = 1575681,
    .offset_limit = 1835968,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_52_dma_init_in_1_17, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_2_17 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 2,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_52_dma_init_in_2_17, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_ca_pipe_1_dma_init_in_0_17 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133_copy_in_3 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_52_ca_pipe_1_dma_init_in_0_17, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_ca_pipe_1_dma_init_out_0_17 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_out_0_cp_in_3 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_52_ca_pipe_1_dma_init_out_0_17, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_suboff_141 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_suboff_141_dma_init_out_0_17 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_56_suboff_141_dma_init_out_0_17, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_52_mul_scale_135 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_138 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Init(switch_init_in_17, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_17_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_17_all_units, 11);

}

static void LL_ATON_End_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_52_mul_scale_135 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_138 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Deinit(switch_deinit_in_17, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_17_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_17_all_units, 11);

}


/* scheduling epoch=18   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_56_conv_identity */

static void LL_ATON_Start_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_56_conv_identity */
  /* node=Conv2D_56_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_conv_identity_dma_init_in_0_18 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142_copy_in_10 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_56_conv_identity_dma_init_in_0_18, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_conv_identity_dma_init_out_0_18 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142_cp_in_10 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_56_conv_identity_dma_init_out_0_18, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_conv_identity OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Init(switch_init_in_18, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_18_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_18_all_units, 2);

}

static void LL_ATON_End_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_conv_identity OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Deinit(switch_deinit_in_18, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_18_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_18_all_units, 2);

}


/* scheduling epoch=19   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_19(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_56 */
  static const LL_Convacc_InitTypeDef Conv2D_56_init19 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_56_init19);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_56_mul_scale_144 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_mul_scale_144_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3564848) /* Equivalent hex address = 0x704e6530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_56_mul_scale_144_init19);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_56_off_bias_147 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_off_bias_147_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18928,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3539248) /* Equivalent hex address = 0x704e0130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_56_off_bias_147_init19);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_59_suboff_150 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_suboff_150_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_59_suboff_150_init19);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_dma_init_in_0_19 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_56_dma_init_in_0_19, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56 input ports=1 range=5[3192288,3229152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_dma_init_in_1_19 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_56_weights_inflated_274 */
    .offset_start = 3192288,
    .offset_end = 3229152,
    .offset_limit = 3229216,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_56_dma_init_in_1_19, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_suboff_150 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_suboff_150_dma_init_out_0_19 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_59_suboff_150_dma_init_out_0_19, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_19[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_mul_scale_144 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_off_bias_147 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=19 */
  LL_Switch_Init(switch_init_in_19, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_19_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_19_all_units, 7);

}

static void LL_ATON_End_EpochBlock_19(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_19[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_mul_scale_144 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_off_bias_147 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=19 */
  LL_Switch_Deinit(switch_deinit_in_19, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_19_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_19_all_units, 7);

}


/* scheduling epoch=20   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_59 */
  static const LL_Convacc_InitTypeDef Conv2D_59_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_59_init20);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_59_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_59_ca_pipe_1_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_59_ca_pipe_1_init20);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_59_mul_scale_153 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_mul_scale_153_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3565872) /* Equivalent hex address = 0x704e6930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_59_mul_scale_153_init20);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_59_off_bias_156 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_off_bias_156_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26732,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3541296) /* Equivalent hex address = 0x704e0930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_59_off_bias_156_init20);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_63_suboff_159 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_suboff_159_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_63_suboff_159_init20);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_0_20 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_59_dma_init_in_0_20, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=1 range=5[1835904,2098176] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_1_20 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_59_weights */
    .offset_start = 1835904,
    .offset_end = 1837953,
    .offset_limit = 2098240,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_59_dma_init_in_1_20, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_2_20 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 5,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_59_dma_init_in_2_20, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_ca_pipe_1_dma_init_in_0_20 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151_copy_in_4 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_59_ca_pipe_1_dma_init_in_0_20, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_ca_pipe_1_dma_init_out_0_20 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_out_0_cp_in_4 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_59_ca_pipe_1_dma_init_out_0_20, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_suboff_159 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_suboff_159_dma_init_out_0_20 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_63_suboff_159_dma_init_out_0_20, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_59_mul_scale_153 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_off_bias_156 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Init(switch_init_in_20, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_20_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_20_all_units, 11);

}

static void LL_ATON_End_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_59_mul_scale_153 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_off_bias_156 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Deinit(switch_deinit_in_20, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_20_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_20_all_units, 11);

}


/* scheduling epoch=21   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_63_conv_identity */

static void LL_ATON_Start_EpochBlock_21(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_63_conv_identity */
  /* node=Conv2D_63_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_conv_identity_dma_init_in_0_21 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160_copy_in_11 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_63_conv_identity_dma_init_in_0_21, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_conv_identity_dma_init_out_0_21 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160_cp_in_11 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_63_conv_identity_dma_init_out_0_21, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_21[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_conv_identity OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=21 */
  LL_Switch_Init(switch_init_in_21, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_21_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_21_all_units, 2);

}

static void LL_ATON_End_EpochBlock_21(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_21[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_conv_identity OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=21 */
  LL_Switch_Deinit(switch_deinit_in_21, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_21_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_21_all_units, 2);

}


/* scheduling epoch=22   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_63 */
  static const LL_Convacc_InitTypeDef Conv2D_63_init22 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_63_init22);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_63_mul_scale_162 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_mul_scale_162_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3566896) /* Equivalent hex address = 0x704e6d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_63_mul_scale_162_init22);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_63_off_bias_165 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_off_bias_165_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 30797,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3543344) /* Equivalent hex address = 0x704e1130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_63_off_bias_165_init22);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_66_suboff_168 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_suboff_168_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_66_suboff_168_init22);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_dma_init_in_0_22 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_63_dma_init_in_0_22, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63 input ports=1 range=5[3229152,3266016] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_dma_init_in_1_22 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_63_weights_inflated_276 */
    .offset_start = 3229152,
    .offset_end = 3266016,
    .offset_limit = 3266080,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_63_dma_init_in_1_22, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_suboff_168 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_suboff_168_dma_init_out_0_22 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_66_suboff_168_dma_init_out_0_22, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_mul_scale_162 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_off_bias_165 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Init(switch_init_in_22, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_22_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_22_all_units, 7);

}

static void LL_ATON_End_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_mul_scale_162 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_off_bias_165 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Deinit(switch_deinit_in_22, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_22_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_22_all_units, 7);

}


/* scheduling epoch=23   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_66 */
  static const LL_Convacc_InitTypeDef Conv2D_66_init23 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_66_init23);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_66_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_66_ca_pipe_1_init23 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_66_ca_pipe_1_init23);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_66_mul_scale_171 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_mul_scale_171_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 10,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3567920) /* Equivalent hex address = 0x704e7130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_66_mul_scale_171_init23);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_66_off_bias_174 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_off_bias_174_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21304,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3545392) /* Equivalent hex address = 0x704e1930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_66_off_bias_174_init23);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_70_suboff_177 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_suboff_177_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_70_suboff_177_init23);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_0_23 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_66_dma_init_in_0_23, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=1 range=5[2098176,2360448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_1_23 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_66_weights */
    .offset_start = 2098176,
    .offset_end = 2100225,
    .offset_limit = 2360512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_66_dma_init_in_1_23, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_2_23 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 5,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_66_dma_init_in_2_23, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_ca_pipe_1_dma_init_in_0_23 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169_copy_in_5 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_66_ca_pipe_1_dma_init_in_0_23, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_ca_pipe_1_dma_init_out_0_23 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_out_0_cp_in_5 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_66_ca_pipe_1_dma_init_out_0_23, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_suboff_177 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_suboff_177_dma_init_out_0_23 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_70_suboff_177_dma_init_out_0_23, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_66_mul_scale_171 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_174 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Init(switch_init_in_23, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_23_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_23_all_units, 11);

}

static void LL_ATON_End_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_66_mul_scale_171 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_174 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Deinit(switch_deinit_in_23, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_23_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_23_all_units, 11);

}


/* scheduling epoch=24   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_70_conv_identity */

static void LL_ATON_Start_EpochBlock_24(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_70_conv_identity */
  /* node=Conv2D_70_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_conv_identity_dma_init_in_0_24 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178_copy_in_12 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_70_conv_identity_dma_init_in_0_24, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_conv_identity_dma_init_out_0_24 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178_cp_in_12 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_70_conv_identity_dma_init_out_0_24, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_24[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=24 */
  LL_Switch_Init(switch_init_in_24, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_24_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_24_all_units, 2);

}

static void LL_ATON_End_EpochBlock_24(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_24[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=24 */
  LL_Switch_Deinit(switch_deinit_in_24, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_24_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_24_all_units, 2);

}


/* scheduling epoch=25   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_70 */
  static const LL_Convacc_InitTypeDef Conv2D_70_init25 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_70_init25);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_70_mul_scale_180 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_mul_scale_180_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3568944) /* Equivalent hex address = 0x704e7530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_70_mul_scale_180_init25);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_70_off_bias_183 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_off_bias_183_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29635,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3547440) /* Equivalent hex address = 0x704e2130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_70_off_bias_183_init25);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_73_suboff_186 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_suboff_186_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_73_suboff_186_init25);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_dma_init_in_0_25 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_70_dma_init_in_0_25, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70 input ports=1 range=5[3266016,3302880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_dma_init_in_1_25 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_70_weights_inflated_278 */
    .offset_start = 3266016,
    .offset_end = 3302880,
    .offset_limit = 3302944,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_70_dma_init_in_1_25, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_suboff_186 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_suboff_186_dma_init_out_0_25 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_73_suboff_186_dma_init_out_0_25, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_mul_scale_180 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_off_bias_183 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Init(switch_init_in_25, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_25_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_25_all_units, 7);

}

static void LL_ATON_End_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_mul_scale_180 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_off_bias_183 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Deinit(switch_deinit_in_25, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_25_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_25_all_units, 7);

}


/* scheduling epoch=26   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_26(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_73 */
  static const LL_Convacc_InitTypeDef Conv2D_73_init26 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_73_init26);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_73_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_73_ca_pipe_1_init26 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_73_ca_pipe_1_init26);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_73_mul_scale_189 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_mul_scale_189_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3569968) /* Equivalent hex address = 0x704e7930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_73_mul_scale_189_init26);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_73_off_bias_192 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_off_bias_192_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21197,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3549488) /* Equivalent hex address = 0x704e2930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_73_off_bias_192_init26);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_77_suboff_195 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_suboff_195_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_77_suboff_195_init26);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_0_26 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_73_dma_init_in_0_26, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=1 range=5[2360448,2622720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_1_26 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_73_weights */
    .offset_start = 2360448,
    .offset_end = 2362497,
    .offset_limit = 2622784,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_73_dma_init_in_1_26, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_2_26 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_73_dma_init_in_2_26, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_ca_pipe_1_dma_init_in_0_26 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187_copy_in_6 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_73_ca_pipe_1_dma_init_in_0_26, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_ca_pipe_1_dma_init_out_0_26 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_out_0_cp_in_6 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_73_ca_pipe_1_dma_init_out_0_26, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_suboff_195 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_suboff_195_dma_init_out_0_26 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_77_suboff_195_dma_init_out_0_26, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_26[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_73_mul_scale_189 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_off_bias_192 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=26 */
  LL_Switch_Init(switch_init_in_26, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_26_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_26_all_units, 11);

}

static void LL_ATON_End_EpochBlock_26(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_26[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_73_mul_scale_189 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_off_bias_192 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=26 */
  LL_Switch_Deinit(switch_deinit_in_26, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_26_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_26_all_units, 11);

}


/* scheduling epoch=27   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_77_conv_identity */

static void LL_ATON_Start_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_77_conv_identity */
  /* node=Conv2D_77_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_conv_identity_dma_init_in_0_27 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196_copy_in_13 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_77_conv_identity_dma_init_in_0_27, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_conv_identity_dma_init_out_0_27 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196_cp_in_13 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_77_conv_identity_dma_init_out_0_27, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Init(switch_init_in_27, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_27_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_27_all_units, 2);

}

static void LL_ATON_End_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Deinit(switch_deinit_in_27, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_27_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_27_all_units, 2);

}


/* scheduling epoch=28   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_77 */
  static const LL_Convacc_InitTypeDef Conv2D_77_init28 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_77_init28);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_77_mul_scale_198 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_mul_scale_198_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3570992) /* Equivalent hex address = 0x704e7d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_77_mul_scale_198_init28);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_77_off_bias_201 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_off_bias_201_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20201,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3551536) /* Equivalent hex address = 0x704e3130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_77_off_bias_201_init28);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_80_suboff_204 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_suboff_204_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_80_suboff_204_init28);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_0_28 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_77_dma_init_in_0_28, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=1 range=5[3302880,3339744] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_1_28 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_77_weights_inflated_280 */
    .offset_start = 3302880,
    .offset_end = 3339744,
    .offset_limit = 3339808,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_77_dma_init_in_1_28, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_suboff_204 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_suboff_204_dma_init_out_0_28 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_80_suboff_204_dma_init_out_0_28, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_198 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_201 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Init(switch_init_in_28, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_28_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_28_all_units, 7);

}

static void LL_ATON_End_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_198 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_201 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Deinit(switch_deinit_in_28, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_28_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_28_all_units, 7);

}


/* scheduling epoch=29   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_80 */
  static const LL_Convacc_InitTypeDef Conv2D_80_init29 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_80_init29);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_80_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_80_ca_pipe_1_init29 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_80_ca_pipe_1_init29);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_80_mul_scale_207 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_mul_scale_207_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3572016) /* Equivalent hex address = 0x704e8130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_80_mul_scale_207_init29);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_80_off_bias_210 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_off_bias_210_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22231,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3553584) /* Equivalent hex address = 0x704e3930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_80_off_bias_210_init29);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_84_suboff_213 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_suboff_213_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_84_suboff_213_init29);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_0_29 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_80_dma_init_in_0_29, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=1 range=5[2622720,2884992] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_1_29 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_80_weights */
    .offset_start = 2622720,
    .offset_end = 2624769,
    .offset_limit = 2885056,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_80_dma_init_in_1_29, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_2_29 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 4,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_80_dma_init_in_2_29, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_ca_pipe_1_dma_init_in_0_29 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205_copy_in_7 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_80_ca_pipe_1_dma_init_in_0_29, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_ca_pipe_1_dma_init_out_0_29 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_out_0_cp_in_7 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_80_ca_pipe_1_dma_init_out_0_29, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_suboff_213 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_suboff_213_dma_init_out_0_29 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_84_suboff_213_dma_init_out_0_29, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_80_mul_scale_207 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_210 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Init(switch_init_in_29, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_29_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_29_all_units, 11);

}

static void LL_ATON_End_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_80_mul_scale_207 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_210 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Deinit(switch_deinit_in_29, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_29_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_29_all_units, 11);

}


/* scheduling epoch=30   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_84_conv_identity */

static void LL_ATON_Start_EpochBlock_30(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_84_conv_identity */
  /* node=Conv2D_84_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_conv_identity_dma_init_in_0_30 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214_copy_in_14 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_84_conv_identity_dma_init_in_0_30, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_conv_identity_dma_init_out_0_30 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214_cp_in_14 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_84_conv_identity_dma_init_out_0_30, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_30[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
  };


  /* epoch=30 */
  LL_Switch_Init(switch_init_in_30, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_30_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_30_all_units, 2);

}

static void LL_ATON_End_EpochBlock_30(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_30[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
  };


  /* epoch=30 */
  LL_Switch_Deinit(switch_deinit_in_30, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_30_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_30_all_units, 2);

}


/* scheduling epoch=31   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_84 */
  static const LL_Convacc_InitTypeDef Conv2D_84_init31 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_84_init31);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_84_mul_scale_216 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_mul_scale_216_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3573040) /* Equivalent hex address = 0x704e8530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_84_mul_scale_216_init31);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_84_off_bias_219 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_off_bias_219_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23623,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3555632) /* Equivalent hex address = 0x704e4130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_84_off_bias_219_init31);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_87_suboff_222 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_suboff_222_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_87_suboff_222_init31);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_dma_init_in_0_31 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_84_dma_init_in_0_31, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84 input ports=1 range=5[3339744,3376608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_dma_init_in_1_31 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_84_weights_inflated_282 */
    .offset_start = 3339744,
    .offset_end = 3376608,
    .offset_limit = 3376672,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_84_dma_init_in_1_31, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_suboff_222 output ports=0 range=0[6144,9216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_suboff_222_dma_init_out_0_31 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_zero_off_out_223 */
    .offset_start = 6144,
    .offset_limit = 9280,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 3072,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_87_suboff_222_dma_init_out_0_31, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 3072 */

  static const LL_Switch_InitTypeDef switch_init_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_mul_scale_216 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_off_bias_219 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Init(switch_init_in_31, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_31_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_31_all_units, 7);

}

static void LL_ATON_End_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_mul_scale_216 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_off_bias_219 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Deinit(switch_deinit_in_31, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_31_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_31_all_units, 7);

}


/* scheduling epoch=32   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_32(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_87 */
  static const LL_Convacc_InitTypeDef Conv2D_87_init32 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 4,
    .afilt_first = 1,
    .afilt_last = 3,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_87_init32);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_87_mul_scale_225 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_mul_scale_225_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_87_mul_scale_225_init32);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_87_off_bias_228 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_off_bias_228_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17771,
    .B_scalar = 17771,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_87_off_bias_228_init32);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_91_suboff_231 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_suboff_231_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_91_suboff_231_init32);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=0 range=0[6144,9216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_0_32 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_zero_off_out_223 */
    .offset_start = 6144,
    .offset_limit = 9280,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 256,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_87_dma_init_in_0_32, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=1 range=5[1049088,1573632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_1_32 = {
    /* 1024x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_weights */
    .offset_start = 1049088,
    .offset_end = 1573632,
    .offset_limit = 1573696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_87_dma_init_in_1_32, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=2 range=0[12288,12480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_2_32 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 6,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 12544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 256,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_87_dma_init_in_2_32, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_mul_scale_225 input ports=1 range=5[3508256,3512352] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_mul_scale_225_dma_init_in_1_32 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_mul_scale_227 */
    .offset_start = 3508256,
    .offset_end = 3508320,
    .offset_limit = 3512416,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_87_mul_scale_225_dma_init_in_1_32, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_off_bias_228 input ports=1 range=5[3512352,3516448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_off_bias_228_dma_init_in_1_32 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_off_bias_230 */
    .offset_start = 3512352,
    .offset_end = 3512416,
    .offset_limit = 3516512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_87_off_bias_228_dma_init_in_1_32, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 245760 */
  /* octoFlash -> 532480 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 output ports=0 range=0[12288,12480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_out_0_32 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_out_0 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 12544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 256,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_87_dma_init_out_0_32, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_suboff_231 output ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_suboff_231_dma_init_out_0_32 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 16,
    .batch_offset = 1024,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_91_suboff_231_dma_init_out_0_32, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 61440 */

  static const LL_Switch_InitTypeDef switch_init_in_32[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=32 */
  LL_Switch_Init(switch_init_in_32, 10);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_32_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_32_all_units, 11);

}

static void LL_ATON_End_EpochBlock_32(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_32[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=32 */
  LL_Switch_Deinit(switch_deinit_in_32, 10);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_32_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_32_all_units, 11);

}


/* scheduling epoch=33   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_91_conv_identity */

static void LL_ATON_Start_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_91_conv_identity */
  /* node=Conv2D_91_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_conv_identity input ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_conv_identity_dma_init_in_0_33 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232_copy_in_15 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 4,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_91_conv_identity_dma_init_in_0_33, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_conv_identity output ports=0 range=0[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_conv_identity_dma_init_out_0_33 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232_cp_in_15 */
    .offset_start = 6144,
    .offset_end = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 48,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_91_conv_identity_dma_init_out_0_33, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Init(switch_init_in_33, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_33_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_33_all_units, 2);

}

static void LL_ATON_End_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Deinit(switch_deinit_in_33, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_33_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_33_all_units, 2);

}


/* scheduling epoch=34   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_91 */
  static const LL_Convacc_InitTypeDef Conv2D_91_init34 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_91_init34);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_91_mul_scale_234 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_mul_scale_234_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_91_mul_scale_234_init34);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_91_off_bias_237 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_off_bias_237_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28108,
    .B_scalar = 28108,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_91_off_bias_237_init34);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_94_suboff_240 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_suboff_240_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_94_suboff_240_init34);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91 input ports=0 range=0[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_dma_init_in_0_34 = {
    /* 2x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232 */
    .offset_start = 6144,
    .offset_end = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 48,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_91_dma_init_in_0_34, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91 input ports=1 range=5[3016128,3089856] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_dma_init_in_1_34 = {
    /* 1024x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_weights_inflated_284 */
    .offset_start = 3016128,
    .offset_end = 3089856,
    .offset_limit = 3089920,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_91_dma_init_in_1_34, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_mul_scale_234 input ports=1 range=5[3516448,3520544] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_mul_scale_234_dma_init_in_1_34 = {
    /* from memory with batch=8
broadcasting with batch iter=3 outer iter=128 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_mul_scale_236 */
    .offset_start = 3516448,
    .offset_end = 3516480,
    .offset_limit = 3520608,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 32,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 384,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_91_mul_scale_234_dma_init_in_1_34, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_off_bias_237 input ports=1 range=5[3520544,3524640] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_off_bias_237_dma_init_in_1_34 = {
    /* from memory with batch=8
broadcasting with batch iter=3 outer iter=128 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_off_bias_239 */
    .offset_start = 3520544,
    .offset_end = 3520576,
    .offset_limit = 3524704,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 32,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 384,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_91_off_bias_237_dma_init_in_1_34, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */
  /* octoFlash -> 81920 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_suboff_240 output ports=0 range=0[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_suboff_240_dma_init_out_0_34 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_zero_off_out_241 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_94_suboff_240_dma_init_out_0_34, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Init(switch_init_in_34, 8);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_34_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_34_all_units, 9);

}

static void LL_ATON_End_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Deinit(switch_deinit_in_34, 8);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_34_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_34_all_units, 9);

}


/* scheduling epoch=35   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_35(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_94 */
  static const LL_Convacc_InitTypeDef Conv2D_94_init35 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 8,
    .afilt_first = 1,
    .afilt_last = 7,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_94_init35);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_94_mul_scale_243 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_mul_scale_243_init35 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_94_mul_scale_243_init35);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_94_off_bias_246 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_off_bias_246_init35 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27512,
    .B_scalar = 27512,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_94_off_bias_246_init35);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=0 range=0[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_0_35 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_zero_off_out_241 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 43,
    .batch_offset = 1024,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 512,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_94_dma_init_in_0_35, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=1 range=5[0,1049088] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_1_35 = {
    /* 1024x1x1x1024(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_weights */
    .offset_start = 0,
    .offset_end = 1049088,
    .offset_limit = 1049152,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_94_dma_init_in_1_35, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=2 range=0[7168,7360] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_2_35 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 4,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 7168,
    .offset_end = 7360,
    .offset_limit = 7424,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 512,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_94_dma_init_in_2_35, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_mul_scale_243 input ports=1 range=5[3524640,3528736] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_mul_scale_243_dma_init_in_1_35 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_mul_scale_245 */
    .offset_start = 3524640,
    .offset_end = 3524704,
    .offset_limit = 3528800,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_94_mul_scale_243_dma_init_in_1_35, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_off_bias_246 input ports=1 range=5[3504160,3508256] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_off_bias_246_dma_init_in_1_35 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_off_bias_248 */
    .offset_start = 3504160,
    .offset_end = 3504224,
    .offset_limit = 3508320,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_94_off_bias_246_dma_init_in_1_35, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 491520 */
  /* octoFlash -> 1056768 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 output ports=0 range=0[7168,7360] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_out_0_35 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_out_0 */
    .offset_start = 7168,
    .offset_end = 7360,
    .offset_limit = 7424,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 512,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_94_dma_init_out_0_35, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_off_bias_246 output ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_off_bias_246_dma_init_out_0_35 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_off_bias_out_247 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 16,
    .batch_offset = 1024,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_94_off_bias_246_dma_init_out_0_35, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 110592 */

  static const LL_Switch_InitTypeDef switch_init_in_35[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=35 */
  LL_Switch_Init(switch_init_in_35, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_35_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_35_all_units, 10);

}

static void LL_ATON_End_EpochBlock_35(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_35[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=35 */
  LL_Switch_Deinit(switch_deinit_in_35, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_35_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_35_all_units, 10);

}


/* scheduling epoch=36   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 22 [POOL_ACC_V2 0] */
  /* kind=AveragePool node=AveragePool_97 */
  static const LL_Poolacc_InitTypeDef AveragePool_97_init36 = {
    .operation = POOL_GAVG,
    .avgnopad = 0,
    .inputX = 2,
    .inputY = 3,
    .outputX = 3,
    .outputY = 4,
    .poolWinX = 0,
    .poolWinY = 0,
    .strideX = 1,
    .strideY = 1,
    .topCrop = 0,
    .bottomCrop = 2,
    .leftCrop = 0,
    .rightCrop = 1,
    .topPad = 0,
    .bottomPad = 0,
    .leftPad = 0,
    .rightPad = 0,
    .batchSize = 8,
    .shift_f = 0,
    .shift_o = 9,
    .dualLine = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .inbytes_f = 1,
    .outbytes_f = 1,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .mulval = 21845,
    .pad_val_en = 0,
    .pad_val = 0,
  };

  /* Unit=POOL_ACC_V2 */
  LL_Poolacc_Init(0, &AveragePool_97_init36);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=RequantizeLinear_inserted_id414 */
  static const LL_Arithacc_InitTypeDef RequantizeLinear_inserted_id414_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_HEIGHT,
    .Ax_shift = 8,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19737,
    .B_scalar = 6,
    .C_scalar = (short)36000,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &RequantizeLinear_inserted_id414_init36);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Gemm_99_conv_4_suboff_249 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_suboff_249_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_HEIGHT,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Gemm_99_conv_4_suboff_249_init36);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=AveragePool_97 input ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef AveragePool_97_dma_init_in_0_36 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Dequantize_96_out_0 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &AveragePool_97_dma_init_in_0_36, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4_suboff_249 output ports=0 range=0[6144,7168] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_suboff_249_dma_init_out_0_36 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_zero_off_out_250 */
    .offset_start = 6144,
    .offset_end = 6152,
    .offset_limit = 7232,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Gemm_99_conv_4_suboff_249_dma_init_out_0_36, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 1024 */

  static const LL_Switch_InitTypeDef switch_init_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* AveragePool_97 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* RequantizeLinear_inserted_id414 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Init(switch_init_in_36, 4);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_36_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_36_all_units, 5);

}

static void LL_ATON_End_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* AveragePool_97 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* RequantizeLinear_inserted_id414 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Deinit(switch_deinit_in_36, 4);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_36_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_36_all_units, 5);

}


/* scheduling epoch=37   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_37(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Gemm_99_conv_4 */
  static const LL_Convacc_InitTypeDef Gemm_99_conv_4_init37 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_gen_first = 1,
    .accumulate_first = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 8,
    .afilt_first = 1,
    .afilt_last = 7,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 8,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 8,
    .raw_o = 0,
    .fWidth = 1,
    .fHeight = 1,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 10,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 0,
    .top_crop = 0,
    .bot_crop = 0,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Gemm_99_conv_4_init37);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Gemm_99_conv_4_mul_scale_252 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_mul_scale_252_init37 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 10,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 10,
    .batchDepth = 10,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580672) /* Equivalent hex address = 0x704ea300UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Gemm_99_conv_4_mul_scale_252_init37);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Gemm_99_conv_4_off_bias_255 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_off_bias_255_init37 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 10,
    .batchDepth = 10,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17033,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580624) /* Equivalent hex address = 0x704ea2d0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Gemm_99_conv_4_off_bias_255_init37);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4 input ports=0 range=0[6144,7168] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_dma_init_in_0_37 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_zero_off_out_250 */
    .offset_start = 6144,
    .offset_limit = 7232,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 1,
    .batch_depth = 43,
    .batch_offset = 1024,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Gemm_99_conv_4_dma_init_in_0_37, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4 input ports=1 range=5[3462656,3472904] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_dma_init_in_1_37 = {
    /* 10x1x1x1024(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Gemm_99_weights_transposed_3 */
    .offset_start = 3462656,
    .offset_end = 3472904,
    .offset_limit = 3472968,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Gemm_99_conv_4_dma_init_in_1_37, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 1024 */
  /* octoFlash -> 10240 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4_off_bias_255 output ports=0 range=0[0,10] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_off_bias_255_dma_init_out_0_37 = {
    /* to memory with batch=10 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_off_bias_out_256 */
    .offset_start = 0,
    .offset_end = 10,
    .offset_limit = 80,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 10,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Gemm_99_conv_4_off_bias_255_dma_init_out_0_37, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 10 */

  static const LL_Switch_InitTypeDef switch_init_in_37[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Gemm_99_conv_4_mul_scale_252 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=37 */
  LL_Switch_Init(switch_init_in_37, 6);

  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 32) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 32) /* Equivalent hex address = 0x34350020UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_37_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_37_all_units, 6);

}

static void LL_ATON_End_EpochBlock_37(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_37[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Gemm_99_conv_4_mul_scale_252 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=37 */
  LL_Switch_Deinit(switch_deinit_in_37, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_37_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_37_all_units, 6);

}


/* scheduling epoch=38   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_38(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation for unaligned buffer start or end address (only line) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) /* Equivalent hex address = 0x34350480UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=DequantizeLinear_inserted_id416 */
  Dequantizelinear_sw_info dequantizelinear1_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 1,
    .general.input.dim.tensor_c = 10,
    .general.input.dim.num_elem = 10,
    .general.input.stride.b = 10,
    .general.input.stride.h = 10,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580704) /* Equivalent hex address = 0x704ea320UL */,
    .is.format.is_signed = 0,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3581168) /* Equivalent hex address = 0x704ea4f0UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 1,
    .general.output.dim.tensor_c = 10,
    .general.output.dim.num_elem = 10,
    .general.output.stride.b = 40,
    .general.output.stride.h = 40,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */,
    .general.output.format.is_signed = 0,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node DequantizeLinear_inserted_id416 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear1_sw_info);
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) /* Equivalent hex address = 0x34350480UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=39   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_39(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation for unaligned buffer end address (last line) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1056) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1056) /* Equivalent hex address = 0x34350420UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=Softmax node=Softmax_102 */
  Softmax_sw_info softmax2_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 10,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 10,
    .general.input.stride.b = 40,
    .general.input.stride.h = 40,
    .general.input.stride.w = 4,
    .general.input.stride.c = 4,
    .general.input.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */,
    .general.input.format.is_signed = 0,
    /* "scratch" tensor-related info: */
    .scratch.dim.tensor_b = 1,
    .scratch.dim.tensor_h = 1,
    .scratch.dim.tensor_w = 257,
    .scratch.dim.tensor_c = 1,
    .scratch.dim.num_elem = 257,
    .scratch.stride.b = 1028,
    .scratch.stride.h = 1028,
    .scratch.stride.w = 4,
    .scratch.stride.c = 4,
    .scratch.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */,
    .scratch.format.is_signed = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 10,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 10,
    .general.output.stride.b = 40,
    .general.output.stride.h = 40,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1040) /* Equivalent hex address = 0x34350410UL */,
    .general.output.format.is_signed = 1,
    /* Node-specific Hyper-parameters: */
    .axis = 3,
    .general.type = LL_SW_SOFTMAX,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Softmax_102 mapped on EmbedNets (FLOAT) as Softmax | Category: Computational */
  ll_sw_forward_softmax(&softmax2_sw_info);
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=40   nodes=1   ------------------------------------------------------------------- */

/* scheduling DONE                 ------------------------------------------------------------------- */

const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_Default(void) {

  static const EpochBlock_ItemTypeDef ll_atonn_rt_epoch_block_array[] = {
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_1,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 1,
      .last_epoch_num = 1,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_2,
      .end_epoch_block = LL_ATON_End_EpochBlock_2,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 2,
      .last_epoch_num = 2,
      .in_streng_mask = 0x00000108,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_3,
      .end_epoch_block = LL_ATON_End_EpochBlock_3,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 3,
      .last_epoch_num = 3,
      .in_streng_mask = 0x00000006,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_4,
      .end_epoch_block = LL_ATON_End_EpochBlock_4,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 4,
      .last_epoch_num = 4,
      .in_streng_mask = 0x00000021,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_5,
      .end_epoch_block = LL_ATON_End_EpochBlock_5,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 5,
      .last_epoch_num = 5,
      .in_streng_mask = 0x00000044,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_6,
      .end_epoch_block = LL_ATON_End_EpochBlock_6,
      .wait_mask = 0x00000010,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 6,
      .last_epoch_num = 6,
      .in_streng_mask = 0x00000208,
      .out_streng_mask = 0x00000010,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_7,
      .end_epoch_block = LL_ATON_End_EpochBlock_7,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 7,
      .last_epoch_num = 7,
      .in_streng_mask = 0x00000041,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_8,
      .end_epoch_block = LL_ATON_End_EpochBlock_8,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 8,
      .last_epoch_num = 8,
      .in_streng_mask = 0x00000210,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_9,
      .end_epoch_block = LL_ATON_End_EpochBlock_9,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 9,
      .last_epoch_num = 9,
      .in_streng_mask = 0x00000081,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_10,
      .end_epoch_block = LL_ATON_End_EpochBlock_10,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 10,
      .last_epoch_num = 10,
      .in_streng_mask = 0x00000048,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_11,
      .end_epoch_block = LL_ATON_End_EpochBlock_11,
      .wait_mask = 0x00000100,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 11,
      .last_epoch_num = 11,
      .in_streng_mask = 0x00000005,
      .out_streng_mask = 0x00000100,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_12,
      .end_epoch_block = LL_ATON_End_EpochBlock_12,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 12,
      .last_epoch_num = 12,
      .in_streng_mask = 0x0000004a,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_13,
      .end_epoch_block = LL_ATON_End_EpochBlock_13,
      .wait_mask = 0x00000020,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 13,
      .last_epoch_num = 13,
      .in_streng_mask = 0x00000204,
      .out_streng_mask = 0x00000020,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_14,
      .end_epoch_block = LL_ATON_End_EpochBlock_14,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 14,
      .last_epoch_num = 14,
      .in_streng_mask = 0x00000188,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_15,
      .end_epoch_block = LL_ATON_End_EpochBlock_15,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 15,
      .last_epoch_num = 15,
      .in_streng_mask = 0x00000008,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_16,
      .end_epoch_block = LL_ATON_End_EpochBlock_16,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 16,
      .last_epoch_num = 16,
      .in_streng_mask = 0x00000030,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_17,
      .end_epoch_block = LL_ATON_End_EpochBlock_17,
      .wait_mask = 0x0000000c,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 17,
      .last_epoch_num = 17,
      .in_streng_mask = 0x00000232,
      .out_streng_mask = 0x0000000c,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_18,
      .end_epoch_block = LL_ATON_End_EpochBlock_18,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 18,
      .last_epoch_num = 18,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_19,
      .end_epoch_block = LL_ATON_End_EpochBlock_19,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 19,
      .last_epoch_num = 19,
      .in_streng_mask = 0x00000030,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_20,
      .end_epoch_block = LL_ATON_End_EpochBlock_20,
      .wait_mask = 0x00000220,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 20,
      .last_epoch_num = 20,
      .in_streng_mask = 0x00000158,
      .out_streng_mask = 0x00000220,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_21,
      .end_epoch_block = LL_ATON_End_EpochBlock_21,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 21,
      .last_epoch_num = 21,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_22,
      .end_epoch_block = LL_ATON_End_EpochBlock_22,
      .wait_mask = 0x00000020,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 22,
      .last_epoch_num = 22,
      .in_streng_mask = 0x00000104,
      .out_streng_mask = 0x00000020,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_23,
      .end_epoch_block = LL_ATON_End_EpochBlock_23,
      .wait_mask = 0x00000060,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 23,
      .last_epoch_num = 23,
      .in_streng_mask = 0x0000018a,
      .out_streng_mask = 0x00000060,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_24,
      .end_epoch_block = LL_ATON_End_EpochBlock_24,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 24,
      .last_epoch_num = 24,
      .in_streng_mask = 0x00000100,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_25,
      .end_epoch_block = LL_ATON_End_EpochBlock_25,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 25,
      .last_epoch_num = 25,
      .in_streng_mask = 0x00000088,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_26,
      .end_epoch_block = LL_ATON_End_EpochBlock_26,
      .wait_mask = 0x00000003,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 26,
      .last_epoch_num = 26,
      .in_streng_mask = 0x0000028c,
      .out_streng_mask = 0x00000003,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_27,
      .end_epoch_block = LL_ATON_End_EpochBlock_27,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 27,
      .last_epoch_num = 27,
      .in_streng_mask = 0x00000008,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_28,
      .end_epoch_block = LL_ATON_End_EpochBlock_28,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 28,
      .last_epoch_num = 28,
      .in_streng_mask = 0x00000021,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_29,
      .end_epoch_block = LL_ATON_End_EpochBlock_29,
      .wait_mask = 0x00000018,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 29,
      .last_epoch_num = 29,
      .in_streng_mask = 0x00000226,
      .out_streng_mask = 0x00000018,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_30,
      .end_epoch_block = LL_ATON_End_EpochBlock_30,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 30,
      .last_epoch_num = 30,
      .in_streng_mask = 0x00000004,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_31,
      .end_epoch_block = LL_ATON_End_EpochBlock_31,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 31,
      .last_epoch_num = 31,
      .in_streng_mask = 0x00000202,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_32,
      .end_epoch_block = LL_ATON_End_EpochBlock_32,
      .wait_mask = 0x00000048,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 32,
      .last_epoch_num = 32,
      .in_streng_mask = 0x000003a4,
      .out_streng_mask = 0x00000048,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_33,
      .end_epoch_block = LL_ATON_End_EpochBlock_33,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 33,
      .last_epoch_num = 33,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_34,
      .end_epoch_block = LL_ATON_End_EpochBlock_34,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 34,
      .last_epoch_num = 34,
      .in_streng_mask = 0x00000116,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_35,
      .end_epoch_block = LL_ATON_End_EpochBlock_35,
      .wait_mask = 0x00000030,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 35,
      .last_epoch_num = 35,
      .in_streng_mask = 0x000003c4,
      .out_streng_mask = 0x00000030,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_36,
      .end_epoch_block = LL_ATON_End_EpochBlock_36,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 36,
      .last_epoch_num = 36,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_37,
      .end_epoch_block = LL_ATON_End_EpochBlock_37,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 37,
      .last_epoch_num = 37,
      .in_streng_mask = 0x00000050,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_38,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 38,
      .last_epoch_num = 38,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_39,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 39,
      .last_epoch_num = 39,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .flags = EpochBlock_Flags_last_eb,
    },
  };


  return ll_atonn_rt_epoch_block_array;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_64_96_1[] = { 1, 96, 1, 64 };
  static const uint32_t buff_info__mem_shape_F_1_64_96_1[] = { 1, 64, 96, 1 };
  static const float buff_info_Input_0_out_0_quant_scale[] = { 0.0305305421352386 };
  static const int16_t buff_info_Input_0_out_0_quant_offset[] = { 33 };
#if LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
  static const uint32_t buff_info__shape_32_1_3_3[] = { 32, 3, 3, 1 };
  static const uint32_t buff_info__mem_shape_F_32_1_3_3[] = { 32, 1, 3, 3 };
  static const float buff_info_Conv2D_3_weights_quant_scale[] = { 0.00626897206529975, 0.0046222978271544, 0.0100087206810713, 0.00517054507508874, 0.00358932092785835, 0.00155779113993049, 0.0135920038446784, 0.00789016112685204, 0.00517411855980754, 0.00507117714732885, 0.00150987925007939, 0.00564915174618363, 0.00947471614927053, 0.00764951016753912, 0.00163400988094509, 0.00420439569279552, 0.00152235582936555, 0.00839320477098227, 0.00202963058836758, 0.00111313490197062, 0.00638923095539212, 0.00867924559861422, 0.0067128068767488, 0.00329195009544492, 0.00755669130012393, 0.0051219966262579, 0.00382484262809157, 0.0140052763745189, 0.00370991439558566, 0.00130085658747703, 0.0111170820891857, 0.00391393760219216 };
  static const int16_t buff_info_Conv2D_3_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_32_1_1[] = { 64, 1, 1, 32 };
  static const uint32_t buff_info__mem_shape_F_64_32_1_1[] = { 64, 32, 1, 1 };
  static const float buff_info_Conv2D_10_weights_quant_scale[] = { 0.00562722748145461, 0.00832801964133978, 0.00415196316316724, 0.00585262477397919, 0.00573461595922709, 0.00405091000720859, 0.00657293573021889, 0.005204186309129, 0.00509126018732786, 0.00517529714852571, 0.00453430972993374, 0.00635979929938912, 0.0060672047547996, 0.00477528758347034, 0.00606812676414847, 0.00487526366487145, 0.0081150783225894, 0.0039207749068737, 0.00827221386134624, 0.00469491584226489, 0.00661261798813939, 0.00495399534702301, 0.00396728748455644, 0.00538828084245324, 0.00549903279170394, 0.00545777101069689, 0.00492843799293041, 0.0067694135941565, 0.00477647269144654, 0.00625960761681199, 0.0055371867492795, 0.0054158759303391, 0.00868832971900702, 0.0060040196403861, 0.00460439641028643, 0.00575540866702795, 0.00650021806359291, 0.0038700713776052, 0.00388706335797906, 0.00749730505049229, 0.00529725570231676, 0.00476505700498819, 0.00605395575985312, 0.00845680013298988, 0.00677733169868588, 0.00548348994925618, 0.00935820955783129, 0.00627560447901487, 0.0062874392606318, 0.00670995144173503, 0.00396116590127349, 0.00432475190609694, 0.00428309105336666, 0.00759849697351456, 0.00500470446422696, 0.00651363376528025, 0.00624201912432909, 0.0043207430280745, 0.00448291562497616, 0.0059825237840414, 0.00443126494064927, 0.00810106005519629, 0.00510126352310181, 0.00437597697600722 };
  static const int16_t buff_info_Conv2D_10_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_128_64_1_1[] = { 128, 1, 1, 64 };
  static const uint32_t buff_info__mem_shape_F_128_64_1_1[] = { 128, 64, 1, 1 };
  static const float buff_info_Conv2D_17_weights_quant_scale[] = { 0.00295649748295546, 0.00484178960323334, 0.00577195826917887, 0.00236292439512908, 0.00503820180892944, 0.00341038056649268, 0.00345891295000911, 0.00271302368491888, 0.00436115451157093, 0.00486356811597943, 0.00426245015114546, 0.00274381134659052, 0.00344242248684168, 0.00531062623485923, 0.00441018538549542, 0.00281471386551857, 0.00466712936758995, 0.00251945154741406, 0.00898927543312311, 0.00474657909944654, 0.00405066926032305, 0.00288035348057747, 0.00263422378338873, 0.00583195965737104, 0.00423706509172916, 0.00438118353486061, 0.00495159905403852, 0.0040714587084949, 0.00289736874401569, 0.00287328683771193, 0.00266494182869792, 0.00270361569710076, 0.00359933660365641, 0.00402878923341632, 0.0031438865698874, 0.00445074355229735, 0.00480238627642393, 0.00490131881088018, 0.0038182083517313, 0.00349325267598033, 0.00279143685474992, 0.00388982915319502, 0.00351295107975602, 0.00308870896697044, 0.004775061737746, 0.00524631608277559, 0.00619377754628658, 0.0045825345441699, 0.00336861819960177, 0.00471811601892114, 0.00260016554966569, 0.00409543048590422, 0.00309767690487206, 0.00428005401045084, 0.00340496608987451, 0.00346250925213099, 0.00367293390445411, 0.00479969102889299, 0.00345236854627728, 0.00270732352510095, 0.00384916947223246, 0.00268200878053904, 0.00379324099048972, 0.00409584678709507, 0.00244957651011646, 0.00398023007437587, 0.00323413824662566, 0.00235169567167759, 0.00555854151025414, 0.00313096819445491, 0.00488313194364309, 0.0038647532928735, 0.00570503668859601, 0.0038333295378834, 0.00323229422792792, 0.00254804617725313, 0.00408108718693256, 0.00330300047062337, 0.00249144388362765, 0.00515611981973052, 0.00502776727080345, 0.00431282818317413, 0.00378773920238018, 0.00297962874174118, 0.00339762936346233, 0.00646358029916883, 0.00244737346656621, 0.00358896725811064, 0.00426999013870955, 0.0024636397138238, 0.0050320471636951, 0.00604240596294403, 0.0026381800416857, 0.0036795933265239, 0.00292876944877207, 0.0037990843411535, 0.00361739657819271, 0.00493568787351251, 0.00604721996933222, 0.00364457187242806, 0.00509009789675474, 0.00336664193309844, 0.00330160185694695, 0.0041907369159162, 0.00532449129968882, 0.0037840090226382, 0.00343758263625205, 0.00232433853670955, 0.00244659371674061, 0.00335515174083412, 0.00493389973416924, 0.00351531920023263, 0.00409651361405849, 0.00563671067357063, 0.00303807226009667, 0.00451473286375403, 0.00651145214214921, 0.0047148740850389, 0.00524017959833145, 0.0025336155667901, 0.00387763860635459, 0.00296803493984044, 0.003402917413041, 0.00216013472527266, 0.00286576035432518, 0.00467273220419884, 0.00311535666696727, 0.00357057759538293 };
  static const int16_t buff_info_Conv2D_17_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_128_128_1_1[] = { 128, 1, 1, 128 };
  static const uint32_t buff_info__mem_shape_F_128_128_1_1[] = { 128, 128, 1, 1 };
  static const float buff_info_Conv2D_24_weights_quant_scale[] = { 0.00315357558429241, 0.00263031153008342, 0.00202489062212408, 0.00322324223816395, 0.00251029012724757, 0.00262458645738661, 0.00268010632134974, 0.00296129006892443, 0.00472715869545937, 0.00356559222564101, 0.00267888139933348, 0.00255902600474656, 0.00284527288749814, 0.00384862930513918, 0.00364589295350015, 0.00308887800201774, 0.00287016830407083, 0.00277444231323898, 0.00326992175541818, 0.00283062225207686, 0.00419613439589739, 0.0028910303954035, 0.00280646118335426, 0.00440798932686448, 0.00514747202396393, 0.00244078366085887, 0.00329420412890613, 0.00307501433417201, 0.00209096656180918, 0.00406174594536424, 0.00206745462492108, 0.00270254421047866, 0.00259936694055796, 0.00255235517397523, 0.00353967980481684, 0.00207696715369821, 0.00257785199210048, 0.00338710797950625, 0.0031986441463232, 0.00328385876491666, 0.0041537694633007, 0.00334970746189356, 0.00214014039374888, 0.00298392213881016, 0.00423576775938272, 0.00221712328493595, 0.00216309004463255, 0.00326141435652971, 0.00256359693594277, 0.0030844637658447, 0.00318000069819391, 0.00242756539955735, 0.00344899110496044, 0.00370752881281078, 0.00351346540264785, 0.002447813982144, 0.00294823991134763, 0.0023821210488677, 0.00395725062116981, 0.00243138941004872, 0.00292032328434289, 0.00238288869149983, 0.00294034788385034, 0.00229425309225917, 0.00305647868663073, 0.00309046893380582, 0.00307172397151589, 0.00247296155430377, 0.00289072375744581, 0.0040754028595984, 0.00299835810437799, 0.00431076576933265, 0.00361005309969187, 0.00344427698291838, 0.00341645698063076, 0.00323593756183982, 0.00340608996339142, 0.00226395111531019, 0.00238894112408161, 0.00201731827110052, 0.00289563811384141, 0.00209938851185143, 0.00351582490839064, 0.00353129603900015, 0.00207520672120154, 0.00308654014952481, 0.00308184861205518, 0.00236017047427595, 0.00288161658681929, 0.00315137789584696, 0.00308215455152094, 0.00312437489628792, 0.00227873236872256, 0.00253437319770455, 0.00251838844269514, 0.00248165801167488, 0.00260884780436754, 0.00298756710253656, 0.00322559149935842, 0.00457671191543341, 0.00248601380735636, 0.00310723902657628, 0.00469274632632732, 0.00254300958476961, 0.00280972593463957, 0.00317782303318381, 0.00240446184761822, 0.00199070456437767, 0.00288087804801762, 0.00236437655985355, 0.00220897514373064, 0.00228543067350984, 0.00223077205009758, 0.00389388157054782, 0.00258874474093318, 0.00415413919836283, 0.00228573638014495, 0.002569385105744, 0.00424344837665558, 0.00348601210862398, 0.00254689832217991, 0.00193100690376014, 0.00290106725879014, 0.00210232846438885, 0.00294532207772136, 0.0039154440164566, 0.00279599172063172, 0.00225685001350939 };
  static const int16_t buff_info_Conv2D_24_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_256_128_1_1[] = { 256, 1, 1, 128 };
  static const uint32_t buff_info__mem_shape_F_256_128_1_1[] = { 256, 128, 1, 1 };
  static const float buff_info_Conv2D_31_weights_quant_scale[] = { 0.00201528077013791, 0.00288273300975561, 0.00196698727086186, 0.00495688896626234, 0.00183155201375484, 0.00224979710765183, 0.00250610476359725, 0.00229765917174518, 0.00235354015603662, 0.00319046317599714, 0.0023287502117455, 0.00179980834946036, 0.00281861517578363, 0.00329340971074998, 0.00207509566098452, 0.00205328944139183, 0.0020809827838093, 0.00381144159473479, 0.00284884171560407, 0.0020386939868331, 0.00193375675007701, 0.0017707129009068, 0.00269047543406487, 0.00240791868418455, 0.00210288050584495, 0.00202623172663152, 0.00132969487458467, 0.00256411451846361, 0.00249036494642496, 0.00188673741649836, 0.00172253674827516, 0.00350338709540665, 0.00252336054109037, 0.00226005422882736, 0.00267112324945629, 0.00166901771444827, 0.00243163201957941, 0.00252330582588911, 0.00247819605283439, 0.0020441587548703, 0.00186204875353724, 0.00230086478404701, 0.00216070865280926, 0.00243641762062907, 0.00169568369165063, 0.00313214049674571, 0.00189304049126804, 0.00247492687776685, 0.00227775704115629, 0.00237623136490583, 0.00231591495685279, 0.00218384643085301, 0.00247606728225946, 0.00203462201170623, 0.00238630641251802, 0.00254168477840722, 0.00344357895664871, 0.00470249401405454, 0.00195922097191215, 0.0038481829687953, 0.00221254327334464, 0.00233092275448143, 0.00209471047855914, 0.00273717055097222, 0.00278024096041918, 0.00225112168118358, 0.0018297954229638, 0.00147368165198714, 0.00272392644546926, 0.00203098519705236, 0.00302121252752841, 0.00363591546192765, 0.00322394259274006, 0.00226235063746572, 0.00286107696592808, 0.00289312587119639, 0.00205329852178693, 0.00223947642371058, 0.00205144984647632, 0.00169356272090226, 0.00211694836616516, 0.00257295370101929, 0.00304121593944728, 0.00226264563389122, 0.00218629161827266, 0.0030775882769376, 0.00258843507617712, 0.00232517905533314, 0.00265025021508336, 0.00221163500100374, 0.00275635090656579, 0.00229756976477802, 0.00271291052922606, 0.00289871613495052, 0.00328261661343277, 0.00193942978512496, 0.00268520973622799, 0.0023376455064863, 0.00331077189184725, 0.00376972486265004, 0.00197107018902898, 0.00321690179407597, 0.0032027312554419, 0.00272562052123249, 0.00253147585317492, 0.00262845400720835, 0.00240303250029683, 0.00256257248111069, 0.00252459477633238, 0.00188486790284514, 0.00357435713522136, 0.0022456725127995, 0.00179474882315844, 0.0031023514457047, 0.00176450842991471, 0.00316076981835067, 0.00218575331382453, 0.00225974479690194, 0.00186800002120435, 0.00227758754044771, 0.00211722124367952, 0.00162441155407578, 0.00194908597040921, 0.00221836590208113, 0.00305639812722802, 0.00252181803807616, 0.00225339666940272, 0.00175826949998736, 0.00205556536093354, 0.00235718488693237, 0.00185312086250633, 0.00200791377574205, 0.00168720714282244, 0.00273383245803416, 0.00268727564252913, 0.00308557064272463, 0.00217615906149149, 0.00290461420081556, 0.00268883653916419, 0.00390676269307733, 0.00216325838118792, 0.00175251043401659, 0.00240152259357274, 0.00421968707814813, 0.00268438644707203, 0.00242653884924948, 0.00234961067326367, 0.00234224041923881, 0.00233038770966232, 0.00240013003349304, 0.00260126823559403, 0.0033263168297708, 0.00230975006707013, 0.00273990351706743, 0.00215684622526169, 0.00350097962655127, 0.00307207088917494, 0.00225197616964579, 0.00284272548742592, 0.00165281887166202, 0.00211980519816279, 0.00306043517775834, 0.00236171553842723, 0.00288415397517383, 0.00233277515508235, 0.00184969766996801, 0.00295641389675438, 0.00201449682936072, 0.00251390575431287, 0.00252624927088618, 0.00247268262319267, 0.00233172019943595, 0.00206414796411991, 0.00207769148983061, 0.00247421860694885, 0.00259565934538841, 0.00222787586972117, 0.00192674272693694, 0.00277949124574661, 0.00223582470789552, 0.0024814223870635, 0.00173186650499701, 0.00189318123739213, 0.00276327319443226, 0.00258588884025812, 0.00212837825529277, 0.00267975218594074, 0.00148580479435623, 0.00197596056386828, 0.00177717104088515, 0.00207074452191591, 0.00279643456451595, 0.00194423960056156, 0.00273394864052534, 0.00183266843669116, 0.00359104061499238, 0.00369406607933342, 0.00218677427619696, 0.00227535399608314, 0.00458960933610797, 0.0022985260002315, 0.00230744807049632, 0.00237587536685169, 0.00240498478524387, 0.00198939419351518, 0.00249368813820183, 0.00245747459121048, 0.0019516124157235, 0.00209016725420952, 0.00296937790699303, 0.00219524395652115, 0.00232652458362281, 0.00254884944297373, 0.00281098973937333, 0.00163822423201054, 0.00206983182579279, 0.00224700244143605, 0.00253528007306159, 0.00204165140166879, 0.00238719419576228, 0.00272936536930501, 0.00328488019295037, 0.00237798038870096, 0.00283539923839271, 0.00206784438341856, 0.0023280952591449, 0.00236873491667211, 0.00203633424825966, 0.00235087820328772, 0.00325379311107099, 0.00168892403598875, 0.00244310824200511, 0.00343336793594062, 0.0019273990765214, 0.00269801588729024, 0.00167002948001027, 0.00312959938310087, 0.00224025291390717, 0.00224807811900973, 0.00193295441567898, 0.00200207158923149, 0.00247654411941767, 0.0035401254426688, 0.00202340446412563, 0.00368244270794094, 0.00230352650396526, 0.00221582688391209, 0.00260476698167622, 0.00300121516920626, 0.0030133998952806, 0.00182112224865705, 0.00239077350124717, 0.00248791952617466, 0.00257425359450281, 0.00201537576504052, 0.00207166513428092 };
  static const int16_t buff_info_Conv2D_31_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_256_256_1_1[] = { 256, 1, 1, 256 };
  static const uint32_t buff_info__mem_shape_M_256_256_1_1[] = { 256, 2, 1, 1, 128 };
  static const float buff_info_Conv2D_38_weights_quant_scale[] = { 0.00173901882953942, 0.00181256257928908, 0.00166511465795338, 0.00174282700754702, 0.00253074779175222, 0.00223539141006768, 0.00217419862747192, 0.00191277381964028, 0.00194539537187666, 0.00166779500432312, 0.00232587591744959, 0.00168492319062352, 0.00231045577675104, 0.00173600995913148, 0.0016427175141871, 0.00207957136444747, 0.0017366970423609, 0.00253563304431736, 0.00186537206172943, 0.0022979115601629, 0.00184252089820802, 0.00199307361617684, 0.00217611296102405, 0.00230171182192862, 0.00187199772335589, 0.00201599788852036, 0.00218371651135385, 0.00146625831257552, 0.00191553018521518, 0.00229324749670923, 0.00189579965081066, 0.00138365721795708, 0.00197157659567893, 0.00171632971614599, 0.00197446788661182, 0.0025805423501879, 0.00265075569041073, 0.00201020995154977, 0.00222525955177844, 0.00317115732468665, 0.00208530900999904, 0.00288912863470614, 0.0016403318149969, 0.00203225621953607, 0.00197792774997652, 0.00199207034893334, 0.00264899013563991, 0.00180110463406891, 0.00213284161873162, 0.00321552716195583, 0.0016194973140955, 0.00163379462901503, 0.00235749548301101, 0.00230302452109754, 0.00194710586220026, 0.00189399928785861, 0.00280816433951259, 0.00270972773432732, 0.00179300690069795, 0.00226701935753226, 0.00258767581544816, 0.00204112799838185, 0.003272122470662, 0.00276395957916975, 0.00246991286985576, 0.00275420863181353, 0.00256599276326597, 0.00196118140593171, 0.00192604726180434, 0.00215449230745435, 0.00154703145381063, 0.00242097093723714, 0.00195875437930226, 0.00238596252165735, 0.00208268174901605, 0.00279226689599454, 0.00223221303895116, 0.00198488566093147, 0.00229077506810427, 0.00220632227137685, 0.00186334201134741, 0.00220281491056085, 0.00308577949181199, 0.00239706225693226, 0.00211292831227183, 0.00199115672148764, 0.00236874213442206, 0.00166961259674281, 0.0018815565854311, 0.0029896218329668, 0.00203923624940217, 0.00234970473684371, 0.00204741186462343, 0.00158979173284024, 0.00175010063685477, 0.00273179518990219, 0.00238777627237141, 0.00184309354517609, 0.0014734665164724, 0.00206410349346697, 0.0022812713868916, 0.00177366065327078, 0.00191517383791506, 0.00160589825827628, 0.00175383209716529, 0.00164957600645721, 0.00249259383417666, 0.00225887773558497, 0.00228833383880556, 0.00182447477709502, 0.00207720370963216, 0.00254012015648186, 0.00191567675210536, 0.0018394363578409, 0.0019425981445238, 0.00174073851667345, 0.00218676240183413, 0.00167037756182253, 0.00194094539619982, 0.00214063259772956, 0.00199795956723392, 0.00280456733889878, 0.00233922526240349, 0.00232465169392526, 0.0020143857691437, 0.00258563621900976, 0.00159036600962281, 0.0028238738887012, 0.00228423229418695, 0.00216343766078353, 0.00156715128105134, 0.00192462047562003, 0.00226567802019417, 0.00192617508582771, 0.00193520309403539, 0.00209303945302963, 0.00183364294935018, 0.00200222968123853, 0.00163647497538477, 0.00270739197731018, 0.00161410612054169, 0.00175242882687598, 0.00217416253872216, 0.00221135350875556, 0.00193295662757009, 0.00299974228255451, 0.00205737305805087, 0.00193380226846784, 0.00222514988854527, 0.00182310095988214, 0.00267441268078983, 0.00242184265516698, 0.00297470251098275, 0.00203995988704264, 0.00182639190461487, 0.00296255247667432, 0.00199888460338116, 0.00205933768302202, 0.00238938233815134, 0.0038304440677166, 0.00263491249643266, 0.00198411056771874, 0.00211298931390047, 0.00167851033620536, 0.00223264563828707, 0.00202780496329069, 0.00203827791847289, 0.00212354259565473, 0.00196930975653231, 0.00232797954231501, 0.00220737443305552, 0.00242823944427073, 0.00199605571106076, 0.00157117086928338, 0.00187857495620847, 0.00231650588102639, 0.00245703244581819, 0.00189409009180963, 0.00197627814486623, 0.00247813109308481, 0.00546324299648404, 0.00202939985319972, 0.00200545624829829, 0.00165201083291322, 0.00253250799141824, 0.00271496293134987, 0.00216942676343024, 0.00226786523126066, 0.00228373799473047, 0.00228270911611617, 0.00218817498534918, 0.00232525705359876, 0.00286717992275953, 0.0028193264734, 0.00257835164666176, 0.00171236391179264, 0.00292547815479338, 0.00149605644401163, 0.00216976925730705, 0.00220489362254739, 0.00210258737206459, 0.00138902908656746, 0.00178598461207002, 0.00175930245313793, 0.00192004395648837, 0.00220578373409808, 0.00293446215800941, 0.00174108485225588, 0.00180151034146547, 0.00242426828481257, 0.00211253738962114, 0.00256780022755265, 0.00224750908091664, 0.00166290649212897, 0.00240081246010959, 0.0024342976976186, 0.00176012190058827, 0.00175185210537165, 0.00224336259998381, 0.00150290259625763, 0.00178829091601074, 0.00203690701164305, 0.00189256388694048, 0.00196989229880273, 0.00201282976195216, 0.00303902802988887, 0.00211400305852294, 0.00199526594951749, 0.00284908316098154, 0.00195127387996763, 0.00346351671032608, 0.00282360310666263, 0.00187315151561052, 0.00205110781826079, 0.00276073021814227, 0.0018441992579028, 0.00218542362563312, 0.00226406031288207, 0.00200454518198967, 0.002236153697595, 0.00224586320109665, 0.00162602763157338, 0.00264561828225851, 0.00175973179284483, 0.00189636775758117, 0.00181215500924736, 0.00244869687594473, 0.00183239241596311, 0.00249248859472573, 0.00188447395339608, 0.00246787047944963, 0.00190011132508516, 0.00208766851574183, 0.00201508891768754, 0.00207570963539183, 0.00200412888079882 };
  static const int16_t buff_info_Conv2D_38_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_512_256_1_1[] = { 512, 1, 1, 256 };
  static const uint32_t buff_info__mem_shape_M_512_256_1_1[] = { 512, 2, 1, 1, 128 };
  static const float buff_info_Conv2D_45_weights_quant_scale[] = { 0.002156374277547, 0.00312270480208099, 0.00249686185270548, 0.00184946646913886, 0.00202950462698936, 0.0017297548474744, 0.00173560588154942, 0.00184232031460851, 0.00176202470902354, 0.00206059403717518, 0.00234007951803505, 0.00185438303742558, 0.00145795498974621, 0.00277350982651114, 0.00173413788434118, 0.00173983070999384, 0.00183168903458863, 0.00239410670474172, 0.00173990672919899, 0.00198426493443549, 0.00187221833039075, 0.00173837807960808, 0.00236377259716392, 0.0020864587277174, 0.00127014191821218, 0.00187095475848764, 0.00178188108839095, 0.0023090208414942, 0.00170508306473494, 0.00179893907625228, 0.00204893783666193, 0.00195250462274998, 0.00233917310833931, 0.00231930590234697, 0.00173114752396941, 0.002611800795421, 0.00248448993079364, 0.00230300729162991, 0.00197934568859637, 0.00265229027718306, 0.00199646246619523, 0.00170874467585236, 0.00279879407025874, 0.00192696042358875, 0.00236215023323894, 0.00225124042481184, 0.00186891877092421, 0.00250964588485658, 0.00232493341900408, 0.00187154428567737, 0.00268445466645062, 0.0023604747839272, 0.0020999985281378, 0.00148050230927765, 0.00175588193815202, 0.0027288303244859, 0.00205734372138977, 0.00201927381567657, 0.00205970206297934, 0.00221522198989987, 0.00186206144280732, 0.00267723156139255, 0.00165606033988297, 0.00212702178396285, 0.00158188387285918, 0.00154977606143802, 0.00175451475661248, 0.00133301608730108, 0.00194796884898096, 0.00189141486771405, 0.0023560831323266, 0.00177803100086749, 0.00140232150442898, 0.00237856712192297, 0.00292151561006904, 0.00190736853983253, 0.00197852007113397, 0.00160182651598006, 0.00146906333975494, 0.00216204463504255, 0.00225120782852173, 0.00250333570875227, 0.0018915148684755, 0.00167013017926365, 0.00169645179994404, 0.00226607313379645, 0.00206281198188663, 0.00228390539996326, 0.0027307525742799, 0.00158880394883454, 0.00194512004964054, 0.00161172833759338, 0.0029473970644176, 0.00181127060204744, 0.00316557753831148, 0.00162261945661157, 0.00197305879555643, 0.00224811187945306, 0.00228031724691391, 0.00205427804030478, 0.00206143478862941, 0.00188845198135823, 0.00209961691871285, 0.00203817267902195, 0.0019806323107332, 0.00197808304801583, 0.00213299412280321, 0.00202935305424035, 0.00232920073904097, 0.00242409389466047, 0.0020809390116483, 0.00200463156215847, 0.00175878242589533, 0.00168201269116253, 0.00169828010257334, 0.00206868187524378, 0.00220538210123777, 0.00165083049796522, 0.00221406342461705, 0.00242754770442843, 0.00203541340306401, 0.00211821170523763, 0.00171494646929204, 0.00207653967663646, 0.00203511537984014, 0.00120878499001265, 0.00231133121997118, 0.00211939564906061, 0.00180323224049062, 0.0025011938996613, 0.00204508122988045, 0.00179644837044179, 0.00189353199675679, 0.00181673839688301, 0.002166289370507, 0.00175695412326604, 0.00290885055437684, 0.0016997754573822, 0.00196167919784784, 0.00216919463127851, 0.00313741806894541, 0.0018151521217078, 0.00151756114792079, 0.00232824240811169, 0.00191492936573923, 0.00269099161960185, 0.00190548098180443, 0.00262646237388253, 0.00195418274961412, 0.00176477548666298, 0.00177918188273907, 0.00269880727864802, 0.00259490986354649, 0.00170859869103879, 0.00181274290662259, 0.00203465623781085, 0.00195566029287875, 0.00202756049111485, 0.00210642488673329, 0.00193644932005554, 0.00150945561472327, 0.00168835883960128, 0.00192820245865732, 0.00190719612874091, 0.00251541659235954, 0.0021428691688925, 0.00198281486518681, 0.00217559351585805, 0.00190321204718202, 0.00248885247856379, 0.00220550107769668, 0.00238697021268308, 0.00235967664048076, 0.00187594222370535, 0.00213898695074022, 0.00218551582656801, 0.001736193546094, 0.00249418220482767, 0.00212248298339546, 0.0024724577087909, 0.00199513789266348, 0.00167918123770505, 0.0015473571838811, 0.00257779401727021, 0.00181576190516353, 0.00193396979011595, 0.00178532430436462, 0.00170659541618079, 0.00176519004162401, 0.00203339965082705, 0.00206954265013337, 0.00211148825474083, 0.00248346757143736, 0.00241471244953573, 0.00230654841288924, 0.00194318871945143, 0.00190938345622271, 0.00196157721802592, 0.00189160893205553, 0.00220509222708642, 0.00194547593127936, 0.00224610394798219, 0.00208324263803661, 0.00251464243046939, 0.00270774052478373, 0.00169552082661539, 0.00183528906200081, 0.00198701815679669, 0.00197620945982635, 0.001941779977642, 0.00179705105256289, 0.00179326604120433, 0.00246318196877837, 0.00190348678734154, 0.00166305596940219, 0.00265715876594186, 0.00178174278698862, 0.00256659276783466, 0.00207575224339962, 0.00164458143990487, 0.00210215547122061, 0.00196953397244215, 0.00226020906120539, 0.00239916401915252, 0.00173677259590477, 0.00211266078986228, 0.0015753626357764, 0.00194121163804084, 0.00215339288115501, 0.00212930073030293, 0.00182049174327403, 0.00216908333823085, 0.00203670794144273, 0.00185060128569603, 0.00190322578419, 0.00185256113763899, 0.00182584405411035, 0.00272103329189122, 0.00188516138587147, 0.00186386948917061, 0.00182663078885525, 0.00230798521079123, 0.00174795172642916, 0.00258219824172556, 0.00209290347993374, 0.00182474649045616, 0.00220772996544838, 0.00166990037541837, 0.00188694044481963, 0.00194447499234229, 0.00189125910401344, 0.00212247064337134, 0.00176868657581508, 0.00191272015217692, 0.00192101730499417, 0.00201126234605908, 0.00198722002096474, 0.00247531989589334, 0.00267085153609514, 0.00242839613929391, 0.00200778571888804, 0.0025818629655987, 0.0020030525047332, 0.00244759977795184, 0.00213277712464333, 0.00255312002263963, 0.00188571703620255, 0.00221988628618419, 0.00163610139861703, 0.00190759659744799, 0.00214438373222947, 0.00185404112562537, 0.00347025040537119, 0.00189845601562411, 0.00178053497802466, 0.00203140289522707, 0.00194853090215474, 0.00179175578523427, 0.00195665145292878, 0.00200052885338664, 0.00161395943723619, 0.00200744811445475, 0.00170807389076799, 0.00159162143245339, 0.00223042163997889, 0.00198422838002443, 0.00156886305194348, 0.00184559857007116, 0.00255794334225357, 0.00183887232560664, 0.00171982788015157, 0.00176947691943496, 0.0020076350774616, 0.0022754380479455, 0.00233188015408814, 0.00188301096204668, 0.00259475014172494, 0.00249827490188181, 0.00194278452545404, 0.00209344527684152, 0.0019725221209228, 0.00194249686319381, 0.00186564028263092, 0.00236366270110011, 0.00163308158516884, 0.00173233810346574, 0.00196775048971176, 0.00232445006258786, 0.00184281659312546, 0.00185071513988078, 0.0018996027065441, 0.00188153109047562, 0.00169775227550417, 0.00260862498544157, 0.00185166427399963, 0.00202390528284013, 0.00244472222402692, 0.00233620358631015, 0.00212929584085941, 0.00214718701317906, 0.00179395405575633, 0.00170086789876223, 0.00184540543705225, 0.00164313870482147, 0.00176694511901587, 0.00222458876669407, 0.00179261644370854, 0.00219348794780672, 0.00152797787450254, 0.00184387376066297, 0.00193261064123362, 0.00274638109840453, 0.00180224794894457, 0.00172587623819709, 0.0023636466357857, 0.00164274452254176, 0.00153643300291151, 0.00223750248551369, 0.0023269159719348, 0.00153151887934655, 0.00167654233518988, 0.00154584343545139, 0.00217065378092229, 0.00224659941159189, 0.0027591532561928, 0.00151939503848553, 0.0015274565666914, 0.00191180617548525, 0.00208494998514652, 0.00240993220359087, 0.00201600464060903, 0.00206322711892426, 0.00165318395011127, 0.00186595181003213, 0.00192459544632584, 0.00208487454801798, 0.00221393606625497, 0.00216267025098205, 0.00247740931808949, 0.00165866722818464, 0.00191475136671215, 0.0018475572578609, 0.00279422011226416, 0.00205792556516826, 0.00189490814227611, 0.00218886788934469, 0.00199261284433305, 0.00204246072098613, 0.0018615024164319, 0.00266136694699526, 0.00205619260668755, 0.00218574656173587, 0.00223550340160728, 0.00193069688975811, 0.00238095596432686, 0.0015058076241985, 0.00172328995540738, 0.00178919301833957, 0.0027707009576261, 0.00164659309666604, 0.00193824665620923, 0.00192237901501358, 0.00200469885021448, 0.00198522745631635, 0.00169522955548018, 0.00217834347859025, 0.00195578951388597, 0.00203207624144852, 0.00230965716764331, 0.00152013020124286, 0.00234263855963945, 0.00227708206512034, 0.00183391070459038, 0.00215483410283923, 0.00216851592995226, 0.00152192206587642, 0.0020699230954051, 0.00175582803785801, 0.00166885007638484, 0.00294613768346608, 0.00162208534311503, 0.00160079775378108, 0.00185480795335025, 0.00168370408937335, 0.00195403071120381, 0.00215432653203607, 0.0026767416857183, 0.00159911892842501, 0.00282375304959714, 0.00199643266387284, 0.00214389944449067, 0.00245152949355543, 0.0032611966598779, 0.00210184557363391, 0.00222747214138508, 0.00195778836496174, 0.00189689395483583, 0.00183871819172055, 0.0023871585726738, 0.00258022686466575, 0.00149058515671641, 0.00173046288546175, 0.00200267275795341, 0.00232111033983529, 0.00170119886752218, 0.0024741985835135, 0.00227446225471795, 0.00212440779432654, 0.00165763415861875, 0.00173233961686492, 0.00197840016335249, 0.00207685981877148, 0.00195544632151723, 0.00224813004024327, 0.00193794583901763, 0.0015373817877844, 0.00219601718708873, 0.00221646437421441, 0.00130683602765203, 0.00173751055262983, 0.00219852011650801, 0.0025187514256686, 0.00173475942574441, 0.00214065960608423, 0.00166536751203239, 0.00192404293920845, 0.00196369457989931, 0.00205823103897274, 0.00211401632986963, 0.00194557791110128, 0.00241621327586472, 0.00183549255598336, 0.00171789154410362, 0.00214233039878309, 0.00184482324402779, 0.00187763094436377, 0.0022375846747309, 0.00194550736341625, 0.00184959557373077, 0.00201429170556366, 0.00169291358906776, 0.001785957836546, 0.0016914785373956, 0.00195150205399841, 0.00169667112641037, 0.00229848059825599, 0.00175286957528442, 0.00216899951919913, 0.00227193301543593, 0.00161661102902144, 0.00176538003142923, 0.00178051390685141, 0.00175908242817968, 0.00217915046960115, 0.00238922424614429, 0.00397395109757781, 0.00259755761362612, 0.00210639811120927, 0.00155157339759171, 0.00231267209164798, 0.00176578434184194, 0.0017812717705965, 0.0022756471298635, 0.00219570728950202, 0.00219850218854845, 0.00210277549922466, 0.00181901489850134, 0.00215318892151117, 0.00253828940913081, 0.00183945742901415, 0.00221466482616961, 0.00208366359584033, 0.00235458300448954, 0.00164936506189406, 0.0019705209415406, 0.00180981343146414, 0.00196820334531367, 0.00304698920808733, 0.0021415229421109, 0.00191740866284817, 0.00148132152389735, 0.00157106120605022, 0.00153499329462647, 0.00188887922558933, 0.00223163864575326, 0.00187450111843646, 0.00187928520608693, 0.00193940219469368, 0.00216356501914561, 0.00228531821630895, 0.00210559088736773, 0.00172468542587012 };
  static const int16_t buff_info_Conv2D_45_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_512_512_1_1[] = { 512, 1, 1, 512 };
  static const uint32_t buff_info__mem_shape_M_512_512_1_1[] = { 512, 4, 1, 1, 128 };
  static const float buff_info_Conv2D_52_weights_quant_scale[] = { 0.00155609974171966, 0.0013831474352628, 0.00224945787340403, 0.00171323295217007, 0.00160757661797106, 0.00143090530764312, 0.0019976245239377, 0.00169917847961187, 0.0012675552861765, 0.00127845932729542, 0.0013774037361145, 0.00188370712567121, 0.00175944238435477, 0.00176550494506955, 0.00205619470216334, 0.00155724852811545, 0.00162443611770868, 0.00326557504013181, 0.00151440349873155, 0.00161757017485797, 0.00167425232939422, 0.00131904112640768, 0.0011862872634083, 0.0017879466759041, 0.00164529390167445, 0.00150303181726485, 0.00171171000692993, 0.00229700095951557, 0.002121951431036, 0.00168040592689067, 0.00149047665763646, 0.00135741231497377, 0.00164075288921595, 0.00137128657661378, 0.00132086535450071, 0.00165748700965196, 0.00133288186043501, 0.00157330988440663, 0.00179673440288752, 0.00145290698856115, 0.00164832698646933, 0.00199897866696119, 0.00190345977898687, 0.0016534790629521, 0.00161498319357634, 0.0014778811018914, 0.00145263038575649, 0.00138186488766223, 0.00178915762808174, 0.00144024565815926, 0.00142651027999818, 0.00136389094404876, 0.00161767401732504, 0.00220438838005066, 0.00169660267420113, 0.00141822663135827, 0.00188199593685567, 0.00156321574468166, 0.0016986730042845, 0.0016257333336398, 0.00102409534156322, 0.00147487502545118, 0.00138435140252113, 0.00173980614636093, 0.00116666546091437, 0.00156306091230363, 0.00147346255835146, 0.00176582799758762, 0.00157268880866468, 0.00181715155486017, 0.00246009789407253, 0.00172501162160188, 0.00134494050871581, 0.00143938907422125, 0.00170843221712857, 0.00148339569568634, 0.00150265754200518, 0.00180968281347305, 0.00169351499062032, 0.0019181378884241, 0.00110082607716322, 0.00152461382094771, 0.00185763987246901, 0.00209622993133962, 0.00156075565610081, 0.00130464206449687, 0.00176456430926919, 0.00159683031961322, 0.00124865269754082, 0.00167618994601071, 0.00160928047262132, 0.00123308866750449, 0.00146565050818026, 0.00121854851022363, 0.00170490029267967, 0.00175048958044499, 0.00135833129752427, 0.00123363896273077, 0.00160468835383654, 0.00181929697282612, 0.00140978861600161, 0.00217637955211103, 0.00193066778592765, 0.00181311182677746, 0.00140864425338805, 0.00154587428551167, 0.00149242975749075, 0.0018268033163622, 0.0012813990470022, 0.00152421486563981, 0.00158933352213353, 0.0016561581287533, 0.00177719013299793, 0.00146012951154262, 0.00129664002452046, 0.00135901314206421, 0.00145152199547738, 0.00203082337975502, 0.00224576937034726, 0.00150645361281931, 0.00157737149856985, 0.00157891458366066, 0.002076699398458, 0.0017422727541998, 0.00139807490631938, 0.00160107505507767, 0.00130974990315735, 0.00177774077747017, 0.00171586370561272, 0.00144017382990569, 0.00148200977127999, 0.00200744671747088, 0.00112778542097658, 0.00144811300560832, 0.00189758080523461, 0.00137810292653739, 0.00236686924472451, 0.00139489176217467, 0.00138656026683748, 0.00145567627623677, 0.00112488097511232, 0.00137637089937925, 0.00151696335524321, 0.00140229519456625, 0.00134235981386155, 0.00162698503118008, 0.00178316724486649, 0.001785924192518, 0.00136128615122288, 0.00144402938894928, 0.00209236354567111, 0.00175887893419713, 0.00142575288191438, 0.00174601539038122, 0.00143492454662919, 0.00150959263555706, 0.00146696588490158, 0.00124785909429193, 0.0017631568480283, 0.00122118403669447, 0.00130069022998214, 0.00129712698981166, 0.00134775042533875, 0.00172239192761481, 0.00148255820386112, 0.00151156168431044, 0.00131633691489697, 0.00125531130470335, 0.00135055382270366, 0.00113510806113482, 0.00156691088341177, 0.00158894772175699, 0.00169958511833102, 0.00122974056284875, 0.00144043273758143, 0.00184500473551452, 0.00159889052156359, 0.00134219869505614, 0.00195945496670902, 0.0013568124268204, 0.00178301031701267, 0.00138760090339929, 0.00209830119274557, 0.00133134017232805, 0.00148216879460961, 0.00175478914752603, 0.0014110307674855, 0.00153698481153697, 0.00162043736781925, 0.0019640966784209, 0.00158880488015711, 0.00135749077890068, 0.00206295540556312, 0.00154995534103364, 0.00166275806259364, 0.00179993116762489, 0.00177581363823265, 0.00128573994152248, 0.00139507942367345, 0.00163353071548045, 0.00143384956754744, 0.00177624146454036, 0.00145533587783575, 0.00157430523540825, 0.00134488777257502, 0.0017562685534358, 0.00130782520864159, 0.00180966965854168, 0.00140519964043051, 0.00146155257243663, 0.00182762171607465, 0.00131019006948918, 0.00140884902793914, 0.00111418194137514, 0.00187811278738081, 0.00185533799231052, 0.00136399979237467, 0.00144429306965321, 0.00135225558187813, 0.00186195445712656, 0.00118400948122144, 0.00214425195008516, 0.00116745778359473, 0.00165712181478739, 0.0014087277231738, 0.00148686754982919, 0.00146786135155708, 0.00157297716941684, 0.0018254368333146, 0.00153503136243671, 0.00169333128724247, 0.00230462080799043, 0.00193194637540728, 0.00188250548671931, 0.00138771941419691, 0.00155976414680481, 0.00132084521465003, 0.00204016943462193, 0.00182636163663119, 0.00146628508809954, 0.00178308773320168, 0.00142476835753769, 0.00149427424184978, 0.00167445954866707, 0.00141879916191101, 0.00193469505757093, 0.00148778641596437, 0.00137115956749767, 0.00149388192221522, 0.00114684109576046, 0.00164095626678318, 0.00152672489639372, 0.00157586601562798, 0.00187219528015703, 0.00147527270019054, 0.00202862685546279, 0.00199763220734894, 0.00163039797917008, 0.00152036838699132, 0.00150706118438393, 0.00196950254030526, 0.00175071379635483, 0.00129532534629107, 0.00168370536994189, 0.00123536959290504, 0.00165388081222773, 0.00158658518921584, 0.00169709254987538, 0.00155752943828702, 0.00158480589743704, 0.00178765109740198, 0.00154435122385621, 0.00170421600341797, 0.00151324307080358, 0.00174999050796032, 0.00120059656910598, 0.00144881545566022, 0.00166340637952089, 0.00151455379091203, 0.00116120709571987, 0.00145260128192604, 0.0017443218966946, 0.00173253729008138, 0.0012056224513799, 0.00160769314970821, 0.00148097879718989, 0.00207645259797573, 0.0020024417899549, 0.00184315722435713, 0.0013310955837369, 0.0014720720